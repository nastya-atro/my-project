{"version":3,"sources":["redux/dialogReducer.ts","api/chatWebSocketApi.ts","redux/chatWebSocketReducer.ts","components/common/preloader/Preloader.module.css","components/Header/Header.module.css","assets/images/user.png","reportWebVitals.js","hoc/withSuspense.tsx","components/Navbar/Navbar.tsx","components/Music/Music.tsx","components/Setting/Setting.tsx","api/api.ts","api/usersApi.ts","api/profileApi.ts","redux/profileReducer.ts","redux/sidebarReducer.ts","redux/usersReducer.ts","api/authApi.ts","api/captchaApi.ts","redux/authReducer.ts","redux/appReducer.ts","redux/friendPageReducer.ts","redux/redux-store.ts","assets/images/spinner.gif","components/common/preloader/Preloader.tsx","components/Profile/Profileinfo/StatusHook.tsx","components/Profile/Profileinfo/ProfileForm.tsx","components/Profile/Profileinfo/ProfileFormChange.tsx","components/Profile/Profileinfo/Profileinfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx","assets/images/logo.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/LoginPage.tsx","components/Footer/Footer.tsx","components/Footer/FooterContainer.tsx","components/common/Paginator/Paginator.tsx","components/FreindPage/FriendPage.tsx","components/FreindPage/FriendPageContainer.tsx","redux/usersSelector.tsx","components/Users/SearchFilter.tsx","components/Users/UseR.tsx","components/Users/Users.tsx","components/Users/UsersContainer.tsx","App.tsx","index.tsx","components/Navbar/Navbar.module.css","components/Profile/Profileinfo/ProfileForm.module.css","components/Users/Users.module.css","components/Profile/Profileinfo/Profileinfo.module.css","components/FreindPage/FriendPage.module.css","components/Login/LoginPage.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Profileinfo/ProfileFormChange.module.css","components/Footer/Footer.module.css","components/common/Paginator/Paginator.module.css"],"names":["initialState","dialogs","name","id","photo","UserImg","messages","message","time","actions","sendMessageBody","newMessage","type","dialogReducer","state","action","body","subscribers","ws","closeHandler","notifySubscribersAboutStatus","console","log","setTimeout","createChanal","messageHandler","e","newMessages","JSON","parse","data","forEach","s","status","openHandler","removeEventListener","cleanUp","close","WebSocket","addEventListener","chatWebSocketApi","eventName","callback","push","filter","send","payload","_newMessageHandler","newMessageHandlerCreator","dispatch","_statusChangedHandler","statuaChangedHandlerCreator","startMessagesListening","a","stopMessagesListening","sendMessage","chatWebSocketReducer","module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","withSuspense","Component","props","fallback","useStyles","makeStyles","theme","createStyles","paper","marginBottom","spacing","backgroundColor","Navbar","classes","className","nav","Paper","item","to","activeClassName","active","Music","link","display","icon","marginRight","width","height","handleClick","event","preventDefault","info","ResultCodeEnum","ResultCodeEnumWithCaptcha","Setting","Breadcrumbs","aria-label","Link","color","href","onClick","Typography","instanse","axios","create","withCredentials","headers","baseURL","usersApi","getUsers","currentPage","pageSize","term","friend","get","response","getFollowedUsers","postFollow","post","res","deleteFollow","delete","getProfile","userId","profileApi","put","photos","formData","FormData","append","profile","posts","likesNumber","newPostText","profileReducer","newPost","p","sidebarReducer","users","totalUsersCount","isfetcing","followingInProgress","totalCount","items","followUnfollowChange","apiMethod","actionCreator","resultCode","Success","unfollow","bind","usersReducer","map","u","followed","authApi","email","password","rememberMe","captcha","captchaApi","login","isAuth","getLogin","getCaptcha","urlCaptcha","url","logout","authReducer","isInitialised","appReducer","totalFriendCount","isFetching","page","getFollowedUserThunk","friendPageReducer","rootReducer","combineReducers","profilePage","messagesPage","sidebar","usersPage","friendPage","auth","app","chat","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Preloader","preloader_wrapper","src","preloader","alt","StatusHook","useState","editMode","setEditMode","setStatus","useEffect","status_input","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","TabPanel","children","index","other","role","hidden","aria-labelledby","Box","a11yProps","root","flexGrow","palette","background","indicator","text","Contact","contactTitle","contactValue","ProfileForm","React","setValue","form_block_name_status","isOwner","button_edit","changeEditMode","fullName","form_block_job_contacts","AppBar","position","Tabs","centered","newValue","Tab","label","aboutMe","job","lookingForAJob","lookingForAJobDescription","contacts","Object","keys","key","ProfileFormChange","initialValues","onSubmit","saveForm","values","handleSubmit","isSubmitting","formChange_wrapper","placeholder","buttonSave","disabled","ProfileInfo","description","backgroundImg","editPhoto_Wrapper","large","UserPhoto","editPhoto","editPhoto_input","target","files","length","putPhotos","editPhoto_label","htmlFor","form_wrapper","setSubmitting","changeProfile","maxWidth","media","paddingTop","expand","transform","marginLeft","transition","transitions","duration","shortest","expandOpen","avatar","red","Post","Card","CardHeader","Avatar","small","IconButton","title","subheader","Date","toLocaleDateString","CardMedia","image","CardContent","variant","component","CardActions","disableSpacing","margin","validateForm","errors","MyPosts","useSelector","useDispatch","postElement","el","postsBlock","validate","touched","handleChange","handleBlur","autoComplete","inputPostBlock","Grid","container","justify","inputPost","TextField","multiline","error","buttonPost","Button","direction","alignItems","MyPostsContainer","Profile","authUserId","getStatusCallback","getStatus","history","useHistory","adress","location","pathname","Number","substring","updateProfile","getProfileCallback","getState","ProfileContainer","toolbar","button","Header","open","setOpen","anchorRef","useRef","handleClose","current","contains","handleListKeyDown","prevOpen","focus","Toolbar","elevation","Logo","img","ref","aria-controls","undefined","aria-haspopup","gutterBottom","Popper","anchorEl","disablePortal","TransitionProps","placement","Grow","style","transformOrigin","ClickAwayListener","onClickAway","MenuList","autoFocusItem","onKeyDown","MenuItem","HeaderContainer","test","LoginPage","login_wrapper","checkbox","onSubmitProps","CaptchaIsRequired","isValid","loginForm","buttonLogin","Footer","footer","footer_contacts","FooterContainer","connect","Paginator","totalItemCount","onPageChanged","portionSize","pageNumber","Math","ceil","i","portionCount","numberPortion","setnumberPortion","leftPortionPageNumber","rightPortionPageNumber","paginator","cn","activePage","selectEmpty","marginTop","align","search","borderRadius","shape","fade","common","white","breakpoints","up","searchIcon","padding","pointerEvents","justifyContent","inputRoot","inputInput","paddingLeft","FriendPage","friendsPage_wrapper","InputBase","input","friendPage_flex","friend_info","friend_info_name","friend_info_status","friendButtonMessage","friendButtonFollow","FriendPageContainer","selectorUsers","selectorPageSize","selectorTotalUsersCount","selectorCurrentPage","selectorIsfetcing","selectorFollowingInProgress","selectorTerm","selectorFriend","SearchFilter","memo","enableReinitialize","String","searchUsers","Container","NativeSelect","UseR","user","follow","user_wrapper","user_photo","userPhto","user_name","user_button","user_buttonUnfollow","some","user_buttonFollow","Users","parsed","require","actualCurrentPage","actualTerm","actualFriend","queryString","stringify","followUser","unfollowUser","users_wrapper","UsersPage","DialogContainer","lazy","ChatPage","SuspenseDialog","SuspenseChatPages","mainContent","content","AppC","withRouter","promise","Promise","all","fixed","xs","exact","path","render","AppContainer","MainApp","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.74b3e86d.chunk.js","sourcesContent":["import { DialogsType, MessagesType } from '../types/types'\r\nimport UserImg from './../assets/images/user.png'\r\nimport { CommonActionsTypes } from './redux-store'\r\n\r\n\r\nlet initialState = { \r\n    dialogs: [\r\n        { name: 'Nastya', id: 1, photo: UserImg},\r\n        { name: 'Maksim', id: 2,  photo: UserImg },\r\n        { name: 'Sacha', id: 3, photo:UserImg },\r\n        { name: 'Alina', id: 4, photo: UserImg },\r\n        { name: 'Zenia', id: 5, photo: UserImg },\r\n        { name: 'Veronika', id: 6, photo: UserImg }\r\n    ] as Array<DialogsType>,\r\n\r\n    messages: [\r\n        { id: 1, message: 'Hello, how are you?', name:'Nastya Atroshanka', time:'01.09.2021', photo: UserImg },\r\n        { id: 2, message: 'Hi, i am fine!', name:'Nastya Atroshanka', time:'01.09.2021',photo: UserImg },\r\n        { id: 3, message: 'What is you name?', name:'Nastya Atroshanka', time:'01.09.2021',photo: UserImg },\r\n        { id: 4, message: 'My name is Nastya. What is your name?', name:'Nastya Atroshanka', time:'01.09.2021',photo: UserImg },\r\n        { id: 5, message: 'My name is Maksim.', name:'Nastya Atroshanka', time:'01.09.2021',photo: UserImg }\r\n    ] as Array<MessagesType>\r\n}\r\n\r\nexport type InitialStateType= typeof initialState\r\n\r\nconst dialogReducer = (state:InitialStateType = initialState, action:ActionsTypes):InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'dialog/SEND-MESSAGE-BODY':\r\n            let body = action.newMessage;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, \r\n                    {id: 5, message: body, \r\n                    name:'Nastya Atroshanka', \r\n                    time:'01.09.2021',\r\n                    photo: UserImg }]\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype ActionsTypes=CommonActionsTypes<typeof actions>\r\n\r\nexport const actions={\r\n    sendMessageBody:(newMessage:string) => ({\r\n        type: 'dialog/SEND-MESSAGE-BODY', newMessage} as const)\r\n}\r\n\r\n\r\nexport default dialogReducer;","export type ChatMessagesType = {\r\n    message: string\r\n    photo: string\r\n    userId: number\r\n    userName: string\r\n}\r\ntype EventType= 'messages-recived' | 'status-changed'\r\n \r\nlet subscribers={\r\n    'messages-recived':[] as Array<SubscriberType>,\r\n    'status-changed': [] as Array<StatusChangedType>\r\n\r\n}\r\n\r\n\r\ntype SubscriberType = (messages: Array<ChatMessagesType>) => void\r\ntype StatusChangedType=(status: 'penging' | 'ready')=>void\r\n\r\n\r\nlet ws: WebSocket | null = null\r\n\r\nlet closeHandler = () => {\r\n    notifySubscribersAboutStatus('penging')\r\n    console.log('CLOSE WS')\r\n    setTimeout(createChanal, 3000)\r\n}\r\nlet messageHandler = (e: MessageEvent) => {\r\n    const newMessages = JSON.parse(e.data)\r\n    subscribers['messages-recived'].forEach(s => s(newMessages))\r\n}\r\n\r\nlet notifySubscribersAboutStatus=(status:'penging' | 'ready')=>{\r\n    subscribers['status-changed'].forEach(s=>s(status))\r\n}\r\n\r\nlet openHandler=()=>{\r\n    notifySubscribersAboutStatus('ready')\r\n}\r\n\r\nlet cleanUp=()=>{\r\n    ws?.removeEventListener('close', closeHandler)\r\n    ws?.removeEventListener('message', messageHandler)\r\n    ws?.removeEventListener('open', openHandler)\r\n}\r\n\r\nfunction createChanal() {\r\n    cleanUp()\r\n    ws?.close()\r\n    ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n    notifySubscribersAboutStatus('penging')\r\n    ws.addEventListener('close', closeHandler)\r\n    ws.addEventListener('message', messageHandler)\r\n    ws.addEventListener('open', openHandler)\r\n}\r\n\r\n\r\n\r\nexport const chatWebSocketApi = {\r\n    start() {\r\n        createChanal()\r\n    },\r\n\r\n    stop() {\r\n        subscribers['messages-recived'] = []\r\n        subscribers['status-changed'] = []\r\n        ws?.removeEventListener('close', closeHandler)\r\n        ws?.removeEventListener('message', messageHandler)\r\n        ws?.close()\r\n    },\r\n\r\n    subscribe(eventName:EventType, callback: SubscriberType|StatusChangedType) {\r\n        //@ts-ignore\r\n        subscribers[eventName].push(callback)\r\n        return () => {\r\n        //@ts-ignore\r\n            subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n        }\r\n    },\r\n\r\n    unsubscribe(eventName:EventType, callback: SubscriberType|StatusChangedType) {\r\n        //@ts-ignore\r\n        subscribers[eventName] = subscribers[eventName].filter(s => s !== callback)\r\n    },\r\n\r\n    sendMessage(message: string) {\r\n        ws?.send(message)\r\n    }\r\n}\r\n\r\n\r\n","\r\nimport { Dispatch } from 'redux'\r\nimport { ChatMessagesType, chatWebSocketApi } from './../api/chatWebSocketApi'\r\nimport { CommonActionsTypes, CommonThunkType } from './redux-store'\r\n\r\nlet initialState = {\r\n    messages: [] as Array<ChatMessagesType>,\r\n    status: 'penging' as StatusType\r\n}\r\ntype InitialStateType = typeof initialState\r\ntype StatusType='penging' | 'ready'\r\n\r\nconst chatWebSocketReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n\r\n        case 'chat/MESSAGES_RECIVED':\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, ...action.payload.messages]\r\n            }\r\n        case 'chat/CHANGE_STATUS':\r\n            return {\r\n                ...state,\r\n                status: action.payload.status\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst actions = {\r\n    messagesRecived: (messages: Array<ChatMessagesType>) => ({\r\n        type: 'chat/MESSAGES_RECIVED',\r\n        payload: {messages}\r\n    } as const),\r\n    statusChange:(status: 'penging' | 'ready')=>({\r\n        type: 'chat/CHANGE_STATUS',\r\n        payload: {status}\r\n    }as const)\r\n}\r\n\r\ntype ActionsTypes = CommonActionsTypes<typeof actions>\r\ntype ThunkType = CommonThunkType<ActionsTypes>\r\n\r\nlet _newMessageHandler: ((messages: Array<ChatMessagesType>) => void) | null = null\r\nconst newMessageHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_newMessageHandler === null) {\r\n        _newMessageHandler = (messages) => {\r\n            dispatch(actions.messagesRecived(messages))\r\n        }\r\n    }\r\n    return _newMessageHandler\r\n}\r\n\r\nlet _statusChangedHandler: ((status: StatusType) => void) | null = null\r\nconst statuaChangedHandlerCreator = (dispatch: Dispatch) => {\r\n    if (_statusChangedHandler === null) {\r\n        _statusChangedHandler = (status) => {\r\n            dispatch(actions.statusChange(status))\r\n        }\r\n    }\r\n    return _statusChangedHandler\r\n}\r\n\r\nexport const startMessagesListening = (): ThunkType => async (dispatch) => {\r\n    chatWebSocketApi.start()\r\n    chatWebSocketApi.subscribe('messages-recived', newMessageHandlerCreator(dispatch))\r\n    chatWebSocketApi.subscribe('status-changed', statuaChangedHandlerCreator(dispatch))\r\n}\r\n\r\nexport const stopMessagesListening = (): ThunkType => async (dispatch) => {\r\n    chatWebSocketApi.unsubscribe('messages-recived', newMessageHandlerCreator(dispatch))\r\n    chatWebSocketApi.unsubscribe('status-changed', statuaChangedHandlerCreator(dispatch))\r\n    chatWebSocketApi.stop()\r\n}\r\n\r\nexport const sendMessage = (messages: string): ThunkType => async (dispatch) => {\r\n    chatWebSocketApi.sendMessage(messages)\r\n}\r\n\r\n\r\nexport default chatWebSocketReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader_wrapper\":\"Preloader_preloader_wrapper__1EPI_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"Header_img__3teNx\",\"header\":\"Header_header__1YroQ\",\"loginBlock\":\"Header_loginBlock__2aYJs\",\"loginBlock_logout\":\"Header_loginBlock_logout__3MfhW\",\"login\":\"Header_login__1wWjh\",\"userImg\":\"Header_userImg__2XgG7\",\"buttonLogout\":\"Header_buttonLogout__1Ffyh\",\"buttonLogin\":\"Header_buttonLogin__QDgul\"};","export default __webpack_public_path__ + \"static/media/user.7a28dde6.png\";","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { Suspense } from 'react';\r\n\r\nexport function withSuspense<WCP> (Component:React.ComponentType<WCP>){\r\n  return (props:WCP) => {\r\n    return <Suspense fallback={<div>Загрузка...</div>}>\r\n      <Component {...props} />\r\n    </Suspense>\r\n  }\r\n}\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\nimport { createStyles, makeStyles, Paper} from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) =>\r\n    createStyles({\r\n        paper:{\r\n            marginBottom: theme.spacing(1),\r\n            backgroundColor:'rgba(189, 189, 189, 0.233)'\r\n        }\r\n       \r\n    }),\r\n);\r\n\r\nconst Navbar = () => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div>\r\n            <nav className={s.nav}>\r\n                <Paper className={classes.paper}><div className={`${s.item}`}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>\r\n                    <i className=\"fas fa-house-user\"></i>\r\n                    <div>Profile</div>\r\n                </NavLink>\r\n            </div></Paper>\r\n            \r\n            <Paper className={classes.paper}>\r\n            <div className={s.item}>\r\n                \r\n                <NavLink to=\"/users\" activeClassName={s.active}>\r\n                    <i className=\"fas fa-users\"></i>\r\n                    <div>Users</div></NavLink>\r\n            </div></Paper>\r\n\r\n            <Paper className={classes.paper}>\r\n            <div className={s.item}>\r\n                <NavLink to=\"/friendpage\" activeClassName={s.active}>\r\n                    <i className=\"fas fa-smile\"></i>\r\n                    <div>My Friends</div></NavLink>\r\n            </div></Paper>\r\n\r\n            <Paper className={classes.paper}>\r\n            <div className={`${s.item}`}>\r\n                <NavLink to=\"/chat\" activeClassName={s.active}>\r\n                    <div>Chat online</div>\r\n                </NavLink>\r\n            </div></Paper>\r\n\r\n            <Paper className={classes.paper}>\r\n            <div className={`${s.item}`}>\r\n                <NavLink to=\"/dialog\" activeClassName={s.active}>\r\n                    <i className=\"fas fa-envelope\"></i>\r\n                    <div>Messages</div></NavLink>\r\n            </div></Paper>\r\n        </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Music = ()=>{\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\r\nimport Link from '@material-ui/core/Link';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport WhatshotIcon from '@material-ui/icons/Whatshot';\r\nimport GrainIcon from '@material-ui/icons/Grain';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    link: {\r\n      display: 'flex',\r\n    },\r\n    icon: {\r\n      marginRight: theme.spacing(0.5),\r\n      width: 20,\r\n      height: 20,\r\n    },\r\n  }),\r\n);\r\n\r\nfunction handleClick(event: React.MouseEvent<HTMLAnchorElement, MouseEvent>) {\r\n  event.preventDefault();\r\n  console.info('You clicked a breadcrumb.');\r\n}\r\n\r\nconst Setting= ()=>{\r\n    const classes = useStyles();\r\n    return(\r\n        <div>\r\n<Breadcrumbs aria-label=\"breadcrumb\">\r\n      <Link color=\"inherit\" href=\"/profile\" onClick={handleClick} className={classes.link}>\r\n        <HomeIcon className={classes.icon} />\r\n        My Profile\r\n      </Link>\r\n      <Link\r\n        color=\"inherit\"\r\n        href=\"/chat\"\r\n        onClick={handleClick}\r\n        className={classes.link}\r\n      >\r\n        <WhatshotIcon className={classes.icon} />\r\n        Chat Online\r\n      </Link>\r\n      <Typography color=\"textPrimary\" className={classes.link}>\r\n        <GrainIcon className={classes.icon} />\r\n        Breadcrumb\r\n      </Typography>\r\n    </Breadcrumbs>\r\n\r\n            Setting \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting ;","import axios from 'axios';\r\n\r\nexport const instanse = axios.create({\r\n    withCredentials: true,\r\n    headers: { \"API-KEY\": \"e33a9b28-32d1-4022-81b8-0bd4ba992caa\" },\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`\r\n})\r\n\r\nexport enum ResultCodeEnum {\r\n    Success =0,\r\n    Error = 1\r\n}\r\nexport enum ResultCodeEnumWithCaptcha{\r\n    CaptchaIsRequired=10\r\n}\r\nexport type ResponseType<D={}, RC=ResultCodeEnum>={\r\n    resultCode: RC\r\n    messages: Array<string>\r\n    data: D\r\n}\r\n\r\n\r\n\r\n\r\n","import { ResponseType } from 'axios';\r\nimport { UserType, ProfileType } from '../types/types';\r\nimport { instanse} from './api';\r\n\r\ntype GetUsersType={\r\n    items: Array<UserType>\r\n    totalCount: number\r\n    error: string\r\n} \r\n \r\nexport const usersApi = {\r\n    getUsers(currentPage:number, pageSize:number, term:string, friend: null|boolean=null) {\r\n        return instanse.get<GetUsersType>(`users?page=${currentPage}&count=${pageSize}&term=${term}`+ (friend===null ? '':`&friend=${friend}`))\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    getFollowedUsers(currentPage:number, pageSize:number, friend:boolean, term:string) {\r\n        return instanse.get<GetUsersType>(`users?page=${currentPage}&count=${pageSize}&friend=${friend}&term=${term}`)\r\n            .then(response => {\r\n                return response.data\r\n            })\r\n    },\r\n    postFollow(id:number) {\r\n        return instanse.post<ResponseType>(`follow/${id}`, {})\r\n        .then(res=>res.data)\r\n    },\r\n\r\n    deleteFollow(id:number) {\r\n        return instanse.delete<ResponseType>(`follow/${id}`)\r\n        .then(res=>res.data)\r\n    },\r\n    getProfile(userId:number |null) {\r\n        return instanse.get<ProfileType>(`profile/` + userId)\r\n        .then(res=>res.data)\r\n    }\r\n}","import { PhotosType, ProfileType } from \"../types/types\"\r\nimport { instanse, ResponseType} from \"./api\"\r\n\r\ntype PutPhotosTypeData={\r\n    photos: PhotosType\r\n}\r\n\r\nexport const profileApi = {\r\n    getStatus(userId:number) {\r\n        return instanse.get(`profile/status/` + userId)\r\n        .then(res=>res.data)\r\n    },\r\n    updateStatus(status:string) {\r\n        return instanse.put<ResponseType>(`profile/status`, { status: status })\r\n        .then(res=>res.data)\r\n    },\r\n    putPhotos(photos: any) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photos)\r\n        return instanse.put<ResponseType<PutPhotosTypeData>>(`profile/photo`, formData, {\r\n            headers: { 'Content-Type': 'multipart/form-data' }\r\n        })\r\n        .then(res=>res.data)\r\n    },\r\n    changeProfile(profile: ProfileType) {\r\n        return instanse.put<ResponseType>(`profile`, profile)\r\n        .then(res=>res.data)\r\n    }\r\n}\r\n\r\n","import { ResultCodeEnum} from \"../api/api\";\r\nimport { PostsType } from './../types/types'\r\nimport { ProfileType } from './../types/types'\r\nimport { PhotosType } from './../types/types'\r\nimport { CommonActionsTypes, CommonThunkType } from \"./redux-store\";\r\nimport { usersApi } from './../api/usersApi';\r\nimport { profileApi } from './../api/profileApi';\r\n \r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aenean commodo ligula eget dolor. Aenean massa. Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus.', likesNumber: 22 },\r\n        { id: 2, message: 'Ut enim ad minima veniam, quis nostrum exercitationem ullam corporis suscipit laboriosam, nisi ut aliquid ex ea commodi consequatur? ', likesNumber: '18' },\r\n        { id: 3, message: 'Nothing, everything, anything, something: if you have nothing, then you have everything, because you have the freedom to do anything, without the fear of losing something.', likesNumber: '99' },\r\n    ] as Array<PostsType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\"\r\n}\r\nexport type InitialStateType = typeof initialState\r\n\r\n\r\nconst profileReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case \"profile/ADD-POST\":\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesNumber: 0\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                posts: [newPost, ...state.posts]\r\n            }\r\n\r\n        case \"profile/SET_USER_PROFILE\":\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        case \"profile/SET_STATUS\":\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n\r\n        case \"profile/DEL_POST\":\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p => p.id !== action.id)\r\n            }\r\n        case \"profile/PUT_PHOTO\":\r\n            return {\r\n                ...state,\r\n                profile: { ...state.profile, photos: action.photos } as ProfileType\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions={\r\n    addPost: (newPostText: string) => ({ type: 'profile/ADD-POST', newPostText } as const),\r\n    deletePostActionCreator: (id: number) => ({\r\n        type: 'profile/DEL_POST', id\r\n    } as const),\r\n    setUserProfile:(profile: ProfileType)=> ({\r\n        type: 'profile/SET_USER_PROFILE', profile\r\n    } as const),\r\n    setStatus: (status: string) => ({\r\n        type: 'profile/SET_STATUS', status\r\n    } as const),\r\n    putPhotoSuccess: (photos: PhotosType) => ({\r\n        type: 'profile/PUT_PHOTO', photos\r\n    } as const),\r\n}\r\n\r\ntype ActionsTypes =CommonActionsTypes<typeof actions>\r\ntype ThunkType= CommonThunkType<ActionsTypes>\r\n\r\nexport const getProfile = (userId: number |null):ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await usersApi.getProfile(userId)\r\n        dispatch(actions.setUserProfile(data))\r\n    }\r\n}\r\nexport const getStatus = (userId: number):ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await profileApi.getStatus(userId)\r\n        dispatch(actions.setStatus(data))\r\n    }\r\n}\r\nexport const updateStatus = (status: string):ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await profileApi.updateStatus(status)\r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            dispatch(actions.setStatus(status))\r\n        }\r\n    }\r\n}\r\nexport const putPhotos = (photos: PhotosType):ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await profileApi.putPhotos(photos)\r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            dispatch(actions.putPhotoSuccess(data.data.photos))\r\n        }\r\n    }\r\n}\r\nexport const changeProfile = (profile: ProfileType):ThunkType => {\r\n    return async (dispatch, getState) => {\r\n        const userId = getState().auth.id\r\n        const data = await profileApi.changeProfile(profile)\r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            dispatch(getProfile(userId))\r\n        }\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\n","let initialState ={}\r\n\r\nconst sidebarReducer=(state=initialState, action:any)=>{\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import { Dispatch } from \"react\";\r\nimport { ResultCodeEnum } from \"../api/api\";\r\nimport { UserType } from \"../types/types\";\r\nimport { CommonActionsTypes, CommonThunkType } from \"./redux-store\";\r\nimport { usersApi } from './../api/usersApi';\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 48,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isfetcing: true,\r\n    followingInProgress: [] as Array<number>, //array of users id\r\n    term: '',\r\n    friend: null as null | boolean\r\n};\r\n \r\ntype InitialStateType = typeof initialState;\r\n\r\nconst usersReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n\r\n    switch (action.type) {\r\n        case 'FOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case 'UNFOLLOW':\r\n            return {\r\n                ...state,\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case 'SET_USERS':\r\n            {\r\n                return {\r\n                    ...state, users: action.users\r\n                }\r\n            }\r\n        case 'SET_CURRENT_PAGE':\r\n            {\r\n                return {\r\n                    ...state, currentPage: action.currentPage\r\n                }\r\n            }\r\n        case 'SET_TOTAL_CURRENT':\r\n            {\r\n                return {\r\n                    ...state, totalUsersCount: action.totalCount\r\n                }\r\n            }\r\n        case 'TOOGLE_IS_FETCING':\r\n            {\r\n                return {\r\n                    ...state, isfetcing: action.isfetcing\r\n                }\r\n            }\r\n        case 'TOOGLE_IS_FOLLOWING_PROGRESS':\r\n            {\r\n                return {\r\n                    ...state,\r\n                    followingInProgress: action.isfetcing ?\r\n                        [...state.followingInProgress, action.userId] :\r\n                        state.followingInProgress.filter(id => id !== action.userId)\r\n                }\r\n            }\r\n\r\n        case 'SEARCH_USERS':{\r\n            return {\r\n                ...state, \r\n                term: action.term,\r\n                friend: action.friend\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const actions = {\r\n    followSuccess: (userId: number) => ({ type: 'FOLLOW', userId } as const),\r\n    unfollowSuccess: (userId: number) => ({ type: 'UNFOLLOW', userId } as const),\r\n    setUsers: (users: Array<UserType>) => ({ type: 'SET_USERS', users } as const),\r\n    setCurrentPage: (currentPage: number) => ({ type: 'SET_CURRENT_PAGE', currentPage } as const),\r\n    setTotalCount: (totalCount: number) => ({ type: 'SET_TOTAL_CURRENT', totalCount } as const),\r\n    toogleIsFetcing: (isfetcing: boolean) => ({ type: 'TOOGLE_IS_FETCING', isfetcing } as const),\r\n    setSearchUsers:(term: string, friend: null|boolean)=>({type: 'SEARCH_USERS', term, friend}as const),\r\n    tooggleFollowingProgress: (isfetcing: boolean, userId: number) => ({ type: 'TOOGLE_IS_FOLLOWING_PROGRESS', isfetcing, userId } as const)\r\n\r\n}\r\n\r\ntype ActionsTypes = CommonActionsTypes<typeof actions>\r\ntype ThunkType = CommonThunkType<ActionsTypes>\r\n\r\nexport const getUsers = (currentPage: number, pageSize: number, term:string, friend: null|boolean): ThunkType => {\r\n    return async (dispatch) => {\r\n        dispatch(actions.toogleIsFetcing(true))\r\n        dispatch(actions.setCurrentPage(currentPage))\r\n        dispatch(actions.setSearchUsers(term, friend))\r\n        let data = await usersApi.getUsers(currentPage, pageSize, term, friend)\r\n        dispatch(actions.toogleIsFetcing(false))\r\n        dispatch(actions.setUsers(data.items))\r\n        dispatch(actions.setTotalCount(data.totalCount))\r\n    }\r\n}\r\nexport const followUnfollowChange = async (dispatch: Dispatch<ActionsTypes>,\r\n    userId: number,\r\n    apiMethod: any,\r\n    actionCreator: (userId: number) => ActionsTypes) => {\r\n    dispatch(actions.tooggleFollowingProgress(true, userId))\r\n    let data = await apiMethod(userId)\r\n    if (data.resultCode === ResultCodeEnum.Success) {\r\n        dispatch(actionCreator(userId))}\r\n    dispatch(actions.tooggleFollowingProgress(false, userId))\r\n}\r\nexport const follow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        followUnfollowChange(dispatch, userId, usersApi.postFollow.bind(usersApi), actions.followSuccess)\r\n    }\r\n}\r\nexport const unfollow = (userId: number): ThunkType => {\r\n    return async (dispatch) => {\r\n        followUnfollowChange(dispatch, userId, usersApi.deleteFollow.bind(usersApi), actions.unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer","import { instanse, ResponseType, ResultCodeEnum, ResultCodeEnumWithCaptcha } from './api';\r\n\r\ntype GetLoginTypeData = {\r\n    id: number, email: string, login: string\r\n}\r\ntype LoginTypeData = {\r\n    userId: number\r\n}\r\nexport const authApi = {\r\n    \r\n    getLogin() {\r\n        return instanse.get<ResponseType<GetLoginTypeData, ResultCodeEnum | ResultCodeEnumWithCaptcha>>(`auth/me`)\r\n            .then(res => res.data)\r\n    },\r\n    login(email: string, password: string, rememberMe: boolean, captcha: string | null = null) {\r\n        return instanse.post<ResponseType<LoginTypeData, ResultCodeEnum | ResultCodeEnumWithCaptcha>>(`auth/login`, { email, password, rememberMe, captcha })\r\n            .then(res => res.data)\r\n    },\r\n    logout() {\r\n        return instanse.delete<ResponseType>(`auth/login`)\r\n        .then(res => res.data)\r\n    }\r\n}","import { instanse } from \"./api\"\r\n\r\n\r\ntype GetCaptchaType={\r\n    url:string\r\n}\r\nexport const captchaApi = {\r\n    getCaptcha() {\r\n        return instanse.get<GetCaptchaType>(`security/get-captcha-url`)\r\n        .then(res=>res.data)\r\n    }\r\n}","import { ResultCodeEnum, ResultCodeEnumWithCaptcha } from \"../api/api\";\r\nimport { CommonActionsTypes, CommonThunkType } from \"./redux-store\";\r\nimport { authApi } from '../api/authApi';\r\nimport { captchaApi } from \"../api/captchaApi\";\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captcha: null as string | null\r\n}\r\ntype InitialStateType = typeof initialState\r\n\r\nconst authReducer = (state: InitialStateType = initialState, action: ActionsTypes): InitialStateType => {\r\n    switch (action.type) {\r\n        case \"auth/SET_USER_DATA\":\r\n        case \"auth/GET_CAPTCHA\":\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst actions = {\r\n    setUserData: (id: number | null, email: string | null, login: string | null, isAuth: boolean) => ({\r\n        type: 'auth/SET_USER_DATA',\r\n        payload: { id, email, login, isAuth }} as const),\r\n    getCaptchaSuccess: (captcha: string) => ({\r\n        type: 'auth/GET_CAPTCHA',\r\n        payload: { captcha }} as const)\r\n}\r\n\r\ntype ActionsTypes=CommonActionsTypes<typeof actions>\r\ntype ThunkType=CommonThunkType<ActionsTypes>\r\n\r\n\r\nexport const getLogin = (): ThunkType => {\r\n    return async (dispatch) => {\r\n        let data = await authApi.getLogin()\r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            let { id, email, login } = data.data;\r\n            dispatch(actions.setUserData(id, email, login, true))\r\n        }\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha: string): ThunkType => {\r\n    \r\n    return async (dispatch) => {\r\n\r\n        let data = await authApi.login(email, password, rememberMe, captcha)\r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            dispatch(getLogin())\r\n        } else if (data.resultCode === ResultCodeEnumWithCaptcha.CaptchaIsRequired) {\r\n            dispatch(getCaptcha())\r\n        }\r\n    }\r\n}\r\n\r\nexport const getCaptcha = (): ThunkType => async (dispatch) => {\r\n    const data = await captchaApi.getCaptcha()\r\n    const urlCaptcha = data.url\r\n    dispatch(actions.getCaptchaSuccess(urlCaptcha))\r\n}\r\n\r\nexport const logout = (): ThunkType => {\r\n    debugger\r\n    return async (dispatch) => {\r\n        \r\n        let data = await authApi.logout()\r\n        \r\n        if (data.resultCode === ResultCodeEnum.Success) {\r\n            dispatch(actions.setUserData(null, null, null, false))\r\n        }\r\n    } \r\n}\r\n\r\n\r\nexport default authReducer;","import { getLogin } from './authReducer';\r\nimport { CommonActionsTypes, CommonThunkType } from './redux-store';\r\n\r\nlet initialState = {\r\n    isInitialised: false,\r\n}\r\ntype initialStateType = typeof initialState\r\n\r\nconst appReducer = (state:initialStateType= initialState, action: ActionsTypes):initialStateType => {\r\n    switch (action.type) {\r\n        case 'app/INITIALISED_SUCCESS':\r\n            return {\r\n                ...state,\r\n                isInitialised: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const actions={\r\n    initializedSuccess:() => ({\r\n        type: 'app/INITIALISED_SUCCESS'\r\n    }) as const\r\n}\r\n\r\ntype ActionsTypes=CommonActionsTypes<typeof actions>\r\ntype ThunkType= CommonThunkType<ActionsTypes>\r\n\r\nexport const initializeApp = ():ThunkType => async(dispatch) => {\r\n        let promise = await dispatch(getLogin());\r\n        Promise.all([promise])\r\n            dispatch(actions.initializedSuccess()) \r\n    }\r\nexport default appReducer;","import { UserType } from '../types/types';\r\nimport { CommonActionsTypes,  CommonThunkType } from './redux-store';\r\nimport { usersApi } from './../api/usersApi';\r\nimport { addSyntheticTrailingComment } from 'typescript';\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    currentPage: 1,\r\n    pageSize: 5,\r\n    totalFriendCount: 0,\r\n    friend: true,\r\n    term: '',\r\n    isFetching: false\r\n}\r\n\r\ntype InitialStateType=typeof initialState\r\n\r\nconst friendPageReducer = (state:InitialStateType = initialState, action:ActionsTypes):InitialStateType => {\r\n    switch (action.type) {\r\n        case 'friendPage/GET_FOLLOWED_USER':\r\n            {\r\n                return {\r\n                    ...state, users: action.users\r\n                }\r\n            }\r\n        case 'friendPage/SER_TOTAL_FRIEND_COUNT': {\r\n            return {\r\n                ...state, totalFriendCount: action.totalFriendCount\r\n            }\r\n        }\r\n        case 'friendPage/CHANGE_PAGE': {\r\n            return {\r\n                ...state, \r\n                currentPage: action.page\r\n            }\r\n        }\r\n        case 'friendPage/SEARCH_PAGE':{\r\n            return {\r\n                ...state,\r\n                term: action.term\r\n            }\r\n        }\r\n        case 'friend/IS_FETCHING':{\r\n            return{\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n        }\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n \r\nexport const actions={\r\n    getFollowedUserAC: (users: Array<UserType>) => ({\r\n        type: 'friendPage/GET_FOLLOWED_USER', users\r\n    } as const),\r\n    \r\n    setTotalFriendCount: (totalFriendCount:number) => ({\r\n        type: 'friendPage/SER_TOTAL_FRIEND_COUNT', totalFriendCount\r\n    }as const),\r\n    \r\n    changePage: (page:number) => ({\r\n        type: 'friendPage/CHANGE_PAGE', page\r\n    }as const),\r\n\r\n    searchFriend:(term: string)=>({\r\n        type: 'friendPage/SEARCH_PAGE', term\r\n    }as const),\r\n    toogleIsFetching:(isFetching:boolean)=>({\r\n        type: 'friend/IS_FETCHING', isFetching\r\n    }as const),\r\n\r\n}\r\n\r\ntype ActionsTypes= CommonActionsTypes<typeof actions>\r\ntype ThunkType= CommonThunkType<ActionsTypes>\r\n\r\nexport const getFollowedUserThunk = (page:number, pageSize:number, friend:boolean, term: string):ThunkType =>{\r\n    return async (dispatch) => {\r\n        dispatch(actions.toogleIsFetching(true))\r\n        dispatch(actions.changePage(page))\r\n        dispatch(actions.searchFriend(term))\r\n        let data = await usersApi.getFollowedUsers(page, pageSize, friend, term)\r\n        dispatch(actions.toogleIsFetching(false))\r\n        dispatch(actions.getFollowedUserAC(data.items))\r\n        dispatch(actions.setTotalFriendCount(data.totalCount))\r\n        \r\n    }\r\n}\r\n\r\nexport default friendPageReducer","import { applyMiddleware, combineReducers, createStore, compose, Action } from \"redux\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport profileReducer from './profileReducer';\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMiddleware, { ThunkAction } from \"redux-thunk\"\r\nimport appReducer from './appReducer';\r\nimport authReducer from './authReducer';\r\nimport friendPageReducer from './friendPageReducer';\r\nimport chatWebSocketReducer from \"./chatWebSocketReducer\";\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n  profilePage: profileReducer,\r\n  messagesPage: dialogReducer,\r\n  sidebar: sidebarReducer,\r\n  usersPage: usersReducer,\r\n  friendPage: friendPageReducer,\r\n  auth: authReducer,\r\n  app: appReducer,\r\n  chat: chatWebSocketReducer\r\n  \r\n});\r\n\r\ntype RootReducerType = typeof rootReducer\r\nexport type AppStateType = ReturnType<RootReducerType>\r\n\r\nexport type CommonActionsTypes<T> = T extends {[key: string]:(...args:any[])=> infer U }?U:never\r\n\r\nexport type CommonThunkType<A extends Action>= ThunkAction<Promise<void>, AppStateType, unknown, A>\r\n\r\n\r\n\r\n//Extentions from Redux DevTools for Chrome\r\n//@ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n));\r\n//@ts-ignore\r\nwindow.__store__ = store;\r\n\r\n\r\n//Without extensions:\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n//window.store= store;\r\n\r\nexport default store;","export default __webpack_public_path__ + \"static/media/spinner.8a848a67.gif\";","import React from 'react';\r\nimport preloader from './../../../assets/images/spinner.gif'\r\nimport s from './Preloader.module.css'\r\n\r\nlet Preloader = ()=>{\r\n    return (\r\n        <div className={s.preloader_wrapper}><img src={preloader} alt=\"description\"/></div>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n\r\n","import React, { ChangeEvent, useEffect, useState } from 'react';\r\nimport s from './ProfileForm.module.css'\r\n\r\n\r\ntype PropsTypes={\r\n    status:string\r\n    updateStatus:(status: string)=>void\r\n}\r\n\r\nconst StatusHook:React.FC<PropsTypes> = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status)},\r\n        [props.status]);\r\n\r\n    let activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    let deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    let onStatusChange = (e:ChangeEvent<HTMLInputElement>) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onClick={activateEditMode}>{props.status || '----'}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div className={s.status_input}>\r\n                    <input type='text' onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusHook","import React from 'react';\r\nimport StatusHook from './StatusHook';\r\nimport s from './ProfileForm.module.css'\r\nimport { ContactsType, ProfileType } from '../../../types/types';\r\nimport { makeStyles, Theme } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport { Paper } from '@material-ui/core';\r\n\r\ninterface TabPanelProps {\r\n    children?: React.ReactNode;\r\n    index: any;\r\n    value: any;\r\n}\r\n\r\nfunction TabPanel(props: TabPanelProps) {\r\n    const { children, value, index, ...other } = props;\r\n\r\n    return (\r\n        <div\r\n            role=\"tabpanel\"\r\n            hidden={value !== index}\r\n            id={`scrollable-force-tabpanel-${index}`}\r\n            aria-labelledby={`scrollable-force-tab-${index}`}\r\n            {...other}\r\n        >\r\n            {value === index && (\r\n                <Box p={3}>\r\n                    <Typography>{children}</Typography>\r\n                </Box>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction a11yProps(index: any) {\r\n    return {\r\n        id: `scrollable-force-tab-${index}`,\r\n        'aria-controls': `scrollable-force-tabpanel-${index}`,\r\n    };\r\n}\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n        width: '100%',\r\n        backgroundColor: theme.palette.background.paper,\r\n\r\n    },\r\n    indicator: {\r\n        backgroundColor: '#036451a1',\r\n    },\r\n    text: {\r\n        color: '#036451a1'\r\n    }\r\n}));\r\ntype PropsTypes = {\r\n    profile: ProfileType\r\n    status: string\r\n    updateStatus: (status: string) => void\r\n    isOwner: boolean\r\n    changeEditMode: () => void\r\n\r\n}\r\n\r\nconst ProfileForm: React.FC<PropsTypes> = (props) => {\r\n    const classes = useStyles();\r\n    const [value, setValue] = React.useState(0);\r\n\r\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\r\n        setValue(newValue);\r\n    };\r\n    return (\r\n        <div>\r\n            <Paper className={s.form_block_name_status}>\r\n                {props.isOwner &&\r\n                    <button className={s.button_edit} onClick={props.changeEditMode}>Edit profile</button>\r\n                }\r\n                <div className={s.fullName}>{props.profile.fullName}</div>\r\n                <div className={s.status}>\r\n                    <StatusHook status={props.status} updateStatus={props.updateStatus} />\r\n                </div>\r\n            </Paper>\r\n            <Paper className={s.form_block_job_contacts}>\r\n                <div className={classes.root}>\r\n                    <AppBar position=\"static\" color=\"default\">\r\n                        <Tabs centered\r\n                            value={value}\r\n                            onChange={handleChange}\r\n                            classes={{\r\n                                indicator: classes.indicator\r\n                            }}\r\n                            className={classes.text}\r\n                        >\r\n                            <Tab label=\"About me\" {...a11yProps(0)} />\r\n                            <Tab label=\"My job\"  {...a11yProps(1)} />\r\n                            <Tab label=\"My contacts\"  {...a11yProps(2)} />\r\n                        </Tabs>\r\n                    </AppBar>\r\n                    <TabPanel value={value} index={0}>\r\n                        <div className={s.aboutMe}>\r\n                            <h3>About me:</h3>\r\n                            {props.profile.aboutMe || '--'}\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={1}>\r\n                        <div className={s.job}>\r\n                            <h3>Info for my job:</h3>\r\n                            <div> <b>Searching a job:</b>{props.profile.lookingForAJob ? \"yes\" : \"no\"}</div>\r\n                            <div><b>Professional skils:</b>{props.profile.lookingForAJobDescription}</div>\r\n                        </div>\r\n                    </TabPanel>\r\n                    <TabPanel value={value} index={2}>\r\n                        <div className={s.contacts}><h3>My contacts:</h3>\r\n                            {Object.keys(props.profile.contacts as ContactsType).map(key => {\r\n                                return <Contact key={key} contactTitle={key}\r\n                                    contactValue={!props.profile.contacts ? '-' : props.profile.contacts[key as keyof ContactsType]} />\r\n                            })}\r\n                        </div>\r\n                    </TabPanel>\r\n                </div></Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\ntype ContactPropsType = {\r\n    contactTitle: string\r\n    contactValue: string\r\n}\r\n\r\nconst Contact: React.FC<ContactPropsType> = ({ contactTitle, contactValue }) => {\r\n    return <div><b>{contactTitle}</b> {contactValue || \"-\"} </div>\r\n}\r\n\r\n\r\nexport default ProfileForm","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport s from './ProfileFormChange.module.css'\r\nimport { ContactsType, ProfileType } from '../../../types/types';\r\n\r\ntype PropsTypes={\r\n    profile: ProfileType\r\n    saveForm:(values: any, { setSubmitting }: { setSubmitting: any; })=>void\r\n}\r\n\r\nconst ProfileFormChange:React.FC<PropsTypes> = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <Formik\r\n                initialValues={{\r\n                    fullName: props.profile.fullName,\r\n                    lookingForAJobDescription: props.profile.lookingForAJobDescription || '--',\r\n                    aboutMe: props.profile.aboutMe\r\n                }}\r\n                onSubmit={props.saveForm}\r\n            >\r\n                {({ values,\r\n                    handleSubmit,\r\n                    isSubmitting }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <div className={s.formChange_wrapper}>\r\n                            <h3>About me:</h3>\r\n                            <div>\r\n                                <b>My full name</b>\r\n                                <Field type=\"text\" name=\"fullName\" value={values.fullName} />\r\n                            </div>\r\n                            <div>\r\n                                <b>My interesting</b>\r\n                                <Field type=\"textarea\" name=\"aboutMe\" value={values.aboutMe} />\r\n                            </div>\r\n                            <div>\r\n                                <h3>My job:</h3>\r\n                                <div> <b>Searching a job</b>\r\n                                    <Field type=\"checkbox\" name=\"lookingForAJob\" />\r\n                                </div>\r\n                                <div><b>Professional skils</b>\r\n                                    <Field type=\"textarea\" name=\"lookingForAJobDescription\" value={values.lookingForAJobDescription} />\r\n                                </div>\r\n                            </div>\r\n                            <div className={s.contacts}><h3>My contacts:</h3>\r\n                                {Object.keys(props.profile.contacts as ContactsType).map(key => {\r\n                                    return (<div>\r\n                                        <b>{key}</b>  <div><Field key={key} type=\"text\" placeholder={key} name={\"contacts.\" + key} \r\n                                        value={!props.profile.contacts?'-': props.profile.contacts[key as keyof ContactsType]} />\r\n                                        </div></div>)\r\n                                })}\r\n                            </div>\r\n                            <button className={s.buttonSave} type=\"submit\" disabled={isSubmitting}>\r\n                                Save\r\n           </button>\r\n                        </div>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileFormChange","import React, { ChangeEvent, useState } from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './Profileinfo.module.css'\r\nimport UserPhoto from '../../../assets/images/user.png'\r\nimport ProfileForm from './ProfileForm';\r\nimport ProfileFormChange from './ProfileFormChange';\r\nimport {ProfileType } from '../../../types/types';\r\n\r\ntype PropsTypes={\r\n    profile: ProfileType\r\n    putPhotos:(photos: File)=>void\r\n    changeProfile:(profile: ProfileType)=>void\r\n    isOwner:boolean\r\n    status:string\r\n    updateStatus:(status: string)=>void\r\n}\r\n\r\n\r\nconst ProfileInfo:React.FC<PropsTypes> = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n\r\n    if (!props.profile) {\r\n        return <Preloader />\r\n    }\r\n    let changePhoto = (e:ChangeEvent<HTMLInputElement>) => {\r\n        if (e.target.files?.length) {\r\n            props.putPhotos(e.target.files[0])\r\n        }\r\n    } \r\n    let changeEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    let saveForm = (values:ProfileType, { setSubmitting }:any) => {\r\n        props.changeProfile(values);\r\n        setEditMode(false)\r\n        setSubmitting(false);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.description}>\r\n                <div className={s.backgroundImg}>\r\n                </div>\r\n                <div className={s.editPhoto_Wrapper}>\r\n                    <img src={!props.profile.photos?UserPhoto:props.profile.photos.large || UserPhoto} className={s.photo} alt=\"description\" />\r\n                    <div className={s.editPhoto}>\r\n                        {props.isOwner &&\r\n                            <input className={s.editPhoto_input} type={'file'} id={\"input__file\"} onChange={changePhoto}></input>}\r\n                        <label className={s.editPhoto_label} htmlFor=\"input__file\"><i className=\"fas fa-camera-retro\"></i></label>\r\n                    </div>\r\n                </div>\r\n                <div className={s.form_wrapper}>\r\n                    {!editMode ? <ProfileForm status={props.status} updateStatus={props.updateStatus} changeEditMode={changeEditMode} profile={props.profile} isOwner={props.isOwner} />\r\n                        : <ProfileFormChange profile={props.profile} saveForm={saveForm} />}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport UserImg from './../../../../assets/images/user.png'\r\nimport { ProfileType } from '../../../../types/types';\r\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport ShareIcon from '@material-ui/icons/Share';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\n\r\ntype PropsTypes = {\r\n  profile: ProfileType | null\r\n  message: string\r\n  likesNumber: number\r\n}\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      maxWidth: 400,\r\n      marginBottom: 10,\r\n      backgroundColor: '#a0a0a01c',\r\n    },\r\n    media: {\r\n      height: 0,\r\n      paddingTop: '56.25%', // 16:9\r\n    },\r\n    expand: {\r\n      transform: 'rotate(0deg)',\r\n      marginLeft: 'auto',\r\n      transition: theme.transitions.create('transform', {\r\n        duration: theme.transitions.duration.shortest,\r\n      }),\r\n    },\r\n    expandOpen: {\r\n      transform: 'rotate(180deg)',\r\n    },\r\n    avatar: {\r\n      backgroundColor: red[500],\r\n    },\r\n  }),\r\n);\r\n\r\nconst Post: React.FC<PropsTypes> = (props) => {\r\n  const classes = useStyles();\r\n  const [expanded, setExpanded] = React.useState(false);\r\n\r\n  return (\r\n\r\n    <Card className={classes.root}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar aria-label=\"recipe\" className={classes.avatar} src={!props.profile ? UserImg : props.profile.photos.small || UserImg} alt=\"description\" />\r\n        }\r\n        action={\r\n          <IconButton aria-label=\"settings\">\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n        }\r\n        title={!props.profile ? 'Users Name' : props.profile.fullName}\r\n        subheader={new Date().toLocaleDateString()}\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image='https://images.unsplash.com/photo-1605528017351-8635bb3d6a3a?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=1051&q=80'\r\n        title=\"Post\"\r\n      />\r\n\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n          {props.message}\r\n        </Typography>\r\n      </CardContent>\r\n\r\n      <CardActions disableSpacing>\r\n        <IconButton aria-label=\"add to favorites\">\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\"> {props.likesNumber}</Typography>\r\n          <FavoriteIcon />\r\n        </IconButton>\r\n        <IconButton aria-label=\"share\">\r\n          <ShareIcon />\r\n        </IconButton>\r\n      </CardActions>\r\n\r\n    </Card>\r\n\r\n  )\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\nimport { Formik, Form, FormikErrors } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../../redux/redux-store';\r\nimport { actions } from '../../../redux/profileReducer';\r\nimport { Button, createStyles, Grid, makeStyles, Paper, TextField, Theme } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      '& .MuiTextField-root': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n      }\r\n    },\r\n  }),\r\n);\r\nconst validateForm = (values: ValuesFormType) => {\r\n    const errors: FormikErrors<ValuesFormType> = {};\r\n    if (values.newPostText.length > 700) {\r\n        errors.newPostText = 'Please write maximum 700 simbols';\r\n    } else if (\r\n        values.newPostText.length < 1\r\n    ) {\r\n        errors.newPostText = 'You can not send an empty message'\r\n    }\r\n    return errors;\r\n}\r\ntype ValuesFormType = {\r\n    newPostText: string\r\n}\r\n\r\nconst MyPosts: React.FC = () => {\r\n    const classes = useStyles();\r\n  const [value, setValue] = React.useState('Controlled');\r\n\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setValue(event.target.value);\r\n  };\r\n\r\n    const posts = useSelector((state: AppStateType) => state.profilePage.posts)\r\n    const profile = useSelector((state: AppStateType) => state.profilePage.profile)\r\n    const dispatch = useDispatch()\r\n    const addPost = (newPostText: string) => {\r\n        dispatch(actions.addPost(newPostText))\r\n    }\r\n    const addNewPostForm = (values: ValuesFormType, { setSubmitting }: any) => {\r\n        addPost(values.newPostText)\r\n        setSubmitting(false);\r\n    }\r\n    \r\n    let postElement = posts.map(el => <Post profile={profile} message={el.message} key={el.id} likesNumber={el.likesNumber} />)\r\n\r\n    return (\r\n        <Paper className={s.postsBlock}>\r\n            <h3>My blog</h3>\r\n            <div>\r\n                <Formik\r\n                    initialValues={{ newPostText: '' }}\r\n                    validate={validateForm}\r\n                    onSubmit={addNewPostForm}\r\n                >\r\n                    {({ values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isSubmitting }) => (\r\n                        <Form onSubmit={handleSubmit} className={classes.root} autoComplete=\"off\">\r\n                            <div className={s.inputPostBlock}>\r\n                                <Grid container justify=\"center\">\r\n                                    <Grid item><div className={s.inputPost}>\r\n                                     <TextField id=\"standard-textarea\" multiline\r\n                                        onChange={handleChange} onBlur={handleBlur} type=\"textarea\" name=\"newPostText\"\r\n                                        placeholder='Write new post here...' />\r\n                                    <div className={s.error}>{errors.newPostText && touched.newPostText && errors.newPostText}</div>\r\n                                </div></Grid>\r\n                                    <Grid item>\r\n                                        <div className={s.buttonPost}>\r\n                                        <Button type=\"submit\" disabled={isSubmitting} variant=\"contained\" > Add post </Button>\r\n                                </div>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            </div>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n            <div>               \r\n                    <Grid container direction=\"column\" justify=\"center\" alignItems=\"center\">\r\n                        <Grid item>{postElement}</Grid>\r\n                    </Grid>             \r\n            </div>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import MyPosts from './MyPosts';\r\n\r\nconst MyPostsContainer=()=>{\r\n    return(\r\n        <MyPosts />\r\n    )\r\n}\r\n\r\nexport default MyPostsContainer","import React, { useEffect } from 'react';\r\nimport ProfileInfo from './Profileinfo/Profileinfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport Preloader from '../common/preloader/Preloader'\r\nimport { ProfileType } from '../../types/types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { getStatus, putPhotos } from '../../redux/profileReducer';\r\nimport { updateStatus, changeProfile, getProfile } from './../../redux/profileReducer';\r\nimport { useHistory } from 'react-router';\r\n \r\n\r\nlet Profile:React.FC= () => {\r\n  \r\n  const profile = useSelector((state: AppStateType) => state.profilePage.profile)\r\n  const authUserId = useSelector((state: AppStateType) => state.auth.id)\r\n  const status = useSelector((state: AppStateType) => state.profilePage.status)\r\n  \r\n  const dispatch = useDispatch()\r\n  const putPhotosCallback = (photos: any) => {\r\n    dispatch(putPhotos(photos))\r\n  }\r\n  const updateStatusCallback = (status: string) => {\r\n    dispatch(updateStatus(status))\r\n  }\r\n  const changeProfileCallback = (profile: ProfileType) => {\r\n    dispatch(changeProfile(profile))\r\n  }\r\n  const getProfileCallback = (userId: number | null) => {\r\n    dispatch(getProfile(userId))\r\n  }\r\n\r\n  const getStatusCallback = (userId: number) => {\r\n    dispatch(getStatus(userId))\r\n  }\r\n\r\n  const history = useHistory()\r\n  let adress = history.location.pathname\r\n  let id = Number(adress.substring(9))\r\n  let userId: number | null = +id\r\n\r\n  let updateProfile = () => {\r\n    if (userId===0) {\r\n      userId = authUserId\r\n      if (userId===0) {\r\n        history.push(\"/login\")\r\n      }}\r\n      getProfileCallback(userId)\r\n      getStatusCallback(userId as number)\r\n  }\r\n\r\n    useEffect(() => {\r\n      updateProfile()\r\n    }, [userId])\r\n\r\n    \r\n\r\n\r\n    if (!profile) {\r\n      return <Preloader />\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <ProfileInfo isOwner={!id} putPhotos={putPhotosCallback}\r\n          profile={profile} status={status} updateStatus={updateStatusCallback} changeProfile={changeProfileCallback} />\r\n        <MyPostsContainer />\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default Profile","import Profile from './Profile';\r\n\r\nconst ProfileContainer=()=>  {\r\n    \r\n        return (\r\n            <Profile />\r\n        )\r\n    }\r\nexport default ProfileContainer\r\n","export default __webpack_public_path__ + \"static/media/logo.e1e33ec7.png\";","import React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\nimport Logo from './../../assets/images/logo.png'\r\nimport UserImg from './../../assets/images/user.png'\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { logout } from '../../redux/authReducer';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Box, Button, Toolbar, Typography, Avatar, Popper, Grow, MenuList, MenuItem, ClickAwayListener } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    toolbar: {\r\n        backgroundColor: 'white'\r\n    },\r\n    button: {\r\n        color: '#03645188;'\r\n    },\r\n    avatar:{\r\n        marginRight: theme.spacing(2)\r\n    }\r\n})\r\n)\r\n\r\nconst Header: React.FC = () => {\r\n\r\n    const isAuth = useSelector((state: AppStateType) => state.auth.isAuth)\r\n    const login = useSelector((state: AppStateType) => state.auth.login)\r\n    const dispatch = useDispatch()\r\n    const logoutCallback = () => {\r\n        dispatch(logout)\r\n    }\r\n\r\n    const classes = useStyles();\r\n    const [open, setOpen] = React.useState(false);\r\n    const anchorRef = React.useRef<HTMLButtonElement>(null);\r\n\r\n    const handleToggle = () => {\r\n        setOpen((prevOpen) => !prevOpen);\r\n    };\r\n\r\n    const handleClose = (event: React.MouseEvent<EventTarget>) => {\r\n        \r\n        if (anchorRef.current && anchorRef.current.contains(event.target as HTMLElement)) {\r\n            return;\r\n        }\r\n        logoutCallback()\r\n        setOpen(false);\r\n\r\n    };\r\n\r\n    function handleListKeyDown(event: React.KeyboardEvent) {\r\n        if (event.key === 'Tab') {\r\n            event.preventDefault();\r\n            setOpen(false);\r\n        }\r\n    }\r\n    const prevOpen = React.useRef(open);\r\n    React.useEffect(() => {\r\n        if (prevOpen.current === true && open === false) {\r\n            anchorRef.current!.focus();\r\n        }\r\n\r\n        prevOpen.current = open;\r\n    }, [open]);\r\n\r\n    return (\r\n        <>\r\n            <Toolbar className={classes.toolbar}>\r\n                <Paper elevation={0} className={classes.root}><img src={Logo} alt=\"description\" className={s.img}></img></Paper>\r\n                {isAuth ?\r\n                    <div>\r\n                        <Button\r\n                            ref={anchorRef}\r\n                            aria-controls={open ? 'menu-list-grow' : undefined}\r\n                            aria-haspopup=\"true\"\r\n                            onClick={handleToggle}\r\n                        ><Avatar className={classes.avatar} alt=\"description\" src={UserImg} />\r\n                            <Typography variant=\"overline\" display=\"block\" gutterBottom>{login}</Typography>\r\n                        </Button>\r\n                        <Popper open={open} anchorEl={anchorRef.current} role={undefined} transition disablePortal>\r\n                            {({ TransitionProps, placement }) => (\r\n                                <Grow\r\n                                    {...TransitionProps}\r\n                                    style={{ transformOrigin: placement === 'bottom' ? 'center top' : 'center bottom' }}\r\n                                >\r\n                                    <Paper>\r\n                                        <ClickAwayListener onClickAway={handleClose}>\r\n                                            <MenuList autoFocusItem={open} id=\"menu-list-grow\" onKeyDown={handleListKeyDown}>\r\n                                                <MenuItem component={Link} to=\"/profile\"><Typography variant=\"overline\" display=\"block\" gutterBottom>My profile</Typography></MenuItem>\r\n                                                <MenuItem component={Link} to=\"/setting\" onClick={handleClose}><Typography  variant=\"overline\" display=\"block\" gutterBottom>Setting</Typography></MenuItem>\r\n                                                <MenuItem onClick={handleClose}><Typography  variant=\"overline\" display=\"block\" gutterBottom>Logout</Typography></MenuItem>\r\n                                            </MenuList>\r\n                                        </ClickAwayListener>\r\n                                        \r\n                                    </Paper>\r\n                                </Grow>\r\n                            )}\r\n                        </Popper>\r\n                    </div> : <div>\r\n                        <Box>\r\n                            <Button variant=\"contained\" color=\"primary\" className={classes.button}><NavLink to={'/login'}>\r\n                            Log in\r\n                    </NavLink></Button>\r\n                        </Box>\r\n                    </div>}\r\n            </Toolbar>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport Header from './Header';\r\n\r\nconst HeaderContainer:React.FC =()=>{\r\n    return (\r\n        <Header />\r\n    )\r\n}\r\n\r\n\r\nexport default HeaderContainer\r\n","import React from 'react';\r\nimport { Formik, Form, Field, FormikErrors} from 'formik';\r\nimport {  useDispatch, useSelector } from 'react-redux';\r\nimport { login } from '../../redux/authReducer';\r\nimport { Redirect } from 'react-router';\r\nimport s from './LoginPage.module.css';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\ntype ValuesType={\r\n    email:string\r\n    password:string\r\n    captcha: string \r\n    checkbox: any\r\n}\r\n//type ValuesTypeKeys= Extract<keyof ValuesType, string>\r\n\r\nconst validateForm = (values:ValuesType) => {\r\n    const errors:FormikErrors<ValuesType>={};\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n    ) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'Required';\r\n    } else if (values.password.length < 6) {\r\n        errors.password = 'Must be more then 6 characters'\r\n    }\r\n    return errors;\r\n}\r\n\r\nconst LoginPage:React.FC = () => {\r\n\r\nconst isAuth=useSelector((state:AppStateType)=>{return state.auth.isAuth})\r\nconst captcha=useSelector((state:AppStateType)=>{return state.auth.captcha})\r\n\r\nconst dispatch=useDispatch()\r\n\r\n    const submit = (values:ValuesType, onSubmitProps:any) => {\r\n        dispatch(login(values.email, values.password, values.checkbox, values.captcha))\r\n        onSubmitProps.setSubmitting(false);\r\n    }\r\n    if (isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n    return (\r\n        <div className={s.login_wrapper}>\r\n            <h1>Welcome to Chevos'ka social network !</h1>\r\n            <div>\r\n                <Formik\r\n                    initialValues={{ email: '', password: '', checkbox: 'true', captcha:'' }}\r\n                    validate={validateForm}\r\n                    onSubmit={submit}\r\n                >\r\n                    {({ values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isValid,\r\n                        isSubmitting }) => (\r\n                        <div className={s.loginForm}>\r\n                            <Form onSubmit={handleSubmit}>\r\n                                <div>\r\n                                    <Field onChange={handleChange} onBlur={handleBlur} type=\"email\" name=\"email\" placeholder=\"Login\" value={values.email} />\r\n                                    <div className={s.error}> {errors.email && touched.email && errors.email}</div>\r\n                                </div>\r\n                                <div>\r\n                                    <Field onChange={handleChange} onBlur={handleBlur} type=\"password\" name=\"password\" placeholder=\"Password\" value={values.password} />\r\n                                    <div className={s.error}>{errors.password && touched.password && errors.password} </div>\r\n                                </div>\r\n                                <div className={s.checkbox}>\r\n                                    <Field onChange={handleChange} type=\"checkbox\" name=\"checkbox\" /> remember me\r\n                        </div>\r\n                                \r\n                                {captcha && <img src={captcha} alt=\"description\" />}\r\n                                {captcha && <Field onChange={handleChange} type=\"text\" name=\"captcha\" />}\r\n                                <div className={s.buttonLogin}>\r\n                                    <button type=\"submit\" disabled={!isValid || isSubmitting}>\r\n                                        Log in\r\n           </button>\r\n                                </div>\r\n                            </Form>\r\n                        </div>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LoginPage","import React from 'react';\r\nimport s from './Footer.module.css'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className={s.footer}>\r\n            <div className={s.footer_contacts}>\r\n                <div className={s.create}>Created by:</div>\r\n                <div>Anastasiya Atroshchenko</div>\r\n                <div>\r\n                    <i className=\"fab fa-linkedin\"></i>\r\n                    <span> linkedin.com/in/bellenastya</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport Footer from './Footer';\r\nimport { connect } from 'react-redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\n\r\nclass FooterContainer extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <Footer/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps=(state: AppStateType)=>({\r\n})\r\n\r\nexport default connect(mapStateToProps, {})(FooterContainer)","import React, { useState } from 'react';\r\nimport s from './Paginator.module.css'\r\nimport cn from \"classnames\"\r\n\r\ntype PropsType={\r\n    totalItemCount: number\r\n    pageSize:number\r\n    currentPage:number\r\n    onPageChanged:(pageNumber:number)=>void\r\n    portionSize?: number\r\n}\r\n\r\nconst Paginator:React.FC<PropsType> = ({ totalItemCount, pageSize, currentPage, onPageChanged, portionSize = 10 }) => {\r\n    let pageNumber = Math.ceil(totalItemCount / pageSize)\r\n\r\n    let page:Array<number> = [];\r\n\r\n    for (let i = 1; i <= pageNumber; i++) {\r\n        page.push(i)\r\n    }\r\n\r\n    let portionCount = Math.ceil(pageNumber / portionSize);\r\n    let [numberPortion, setnumberPortion] = useState(1)\r\n    let leftPortionPageNumber = (numberPortion - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = numberPortion * portionSize;\r\n\r\n\r\n    return (\r\n        <div className={s.paginator}>\r\n            {numberPortion > 1 && <button onClick={() => { setnumberPortion(numberPortion - 1) }}>\r\n                <i className=\"fas fa-angle-double-left\"></i>\r\n            </button>}\r\n            {page\r\n                .filter(p => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n                .map(p => {\r\n                    return <span className={cn({\r\n                        [s.activePage]: currentPage === p\r\n                    }, s.pageNumber)}\r\n                        key={p}\r\n                        onClick={(e) => { onPageChanged(p) }}\r\n                    >{p} </span>\r\n                })}\r\n            {numberPortion < portionCount && <button onClick={() => { setnumberPortion(numberPortion + 1) }}>\r\n                <i className=\"fas fa-angle-double-right\"></i>\r\n            </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator","import React, { useEffect } from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport UserImg from './../../assets/images/user.png'\r\nimport s from './FriendPage.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Formik, Form, Field, FormikHelpers } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport { unfollow } from '../../redux/usersReducer';\r\nimport { getFollowedUserThunk } from '../../redux/friendPageReducer';\r\nimport { InputBase, makeStyles, createStyles, Theme, fade, NativeSelect, Button, Container } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        container: {\r\n            align: 'center'\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginRight: theme.spacing(2),\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(3),\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        button: {\r\n            marginTop: 10,\r\n            marginLeft: 30\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: '20ch',\r\n            },\r\n        }\r\n    }),\r\n);\r\n\r\ntype ValueFormType = {\r\n    search: string\r\n}\r\n\r\nconst FriendPage: React.FC = () => {\r\n    const classes = useStyles();\r\n\r\n    const totalFriendCount = useSelector((state: AppStateType) => state.friendPage.totalFriendCount)\r\n    const pageSize = useSelector((state: AppStateType) => state.friendPage.pageSize)\r\n    const currentPage = useSelector((state: AppStateType) => state.friendPage.currentPage)\r\n    const users = useSelector((state: AppStateType) => state.friendPage.users)\r\n    const friend = useSelector((state: AppStateType) => state.friendPage.friend)\r\n    const term = useSelector((state: AppStateType) => state.friendPage.term)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const unfollowCallback = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n    const changePageFriends = (currentPage: number) => {\r\n        dispatch(getFollowedUserThunk(currentPage, pageSize, friend, term))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(getFollowedUserThunk(currentPage, pageSize, friend, term))\r\n    }, [])\r\n\r\n    const searchFriend = (values: ValueFormType, { setSubmitting }: FormikHelpers<{ search: string }>) => {\r\n        debugger\r\n        dispatch(getFollowedUserThunk(1, pageSize, true, values.search))\r\n        setSubmitting(false);\r\n    }\r\n    return (\r\n        <div className={s.friendsPage_wrapper}>\r\n            <h3>My Friends</h3>\r\n            <div>\r\n                <Formik\r\n                    initialValues={{ search: '' }}\r\n                    onSubmit={searchFriend}\r\n                >\r\n                    {({ isSubmitting, handleChange, handleSubmit }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <div className={classes.search}>\r\n                                <div className={classes.searchIcon}>\r\n                                    <SearchIcon />\r\n                                </div>\r\n                                <InputBase onChange={handleChange}\r\n                                    type=\"text\"\r\n                                    name=\"search\"\r\n                                    placeholder=\"Search…\"\r\n                                    classes={{\r\n                                        root: classes.inputRoot,\r\n                                        input: classes.inputInput,\r\n                                    }} />\r\n                            </div>\r\n                            <Button className={classes.button} variant=\"contained\" type=\"submit\" disabled={isSubmitting}>\r\n                                Search\r\n           </Button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n            <div>\r\n                <Paginator totalItemCount={totalFriendCount}\r\n                    pageSize={pageSize}\r\n                    currentPage={currentPage}\r\n                    onPageChanged={changePageFriends}\r\n                />\r\n            </div>\r\n            <div className={s.friendPage_flex}>{users.map(u =>\r\n                <div className={s.friend_info}>\r\n                    <div>\r\n                        <NavLink to={'/profile/' + u.id}>\r\n                            <img src={u.photos.small || UserImg} alt=\"description\"></img>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div className={s.friend_info_name}>{u.name}</div>\r\n                    <div className={s.friend_info_status}>{u.status}</div>\r\n\r\n                    <span className={s.friendButtonMessage}><NavLink to='./dialog'>Write message</NavLink></span>\r\n                    <button className={s.friendButtonFollow} onClick={() => {\r\n                        unfollowCallback(u.id)\r\n                    }\r\n                    }>Unfollow</button>\r\n                </div>)\r\n            }\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default FriendPage","import FriendPage from './FriendPage';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from '../../redux/redux-store';\r\nimport Preloader from '../common/preloader/Preloader';\r\n\r\n \r\n\r\nconst FriendPageContainer=()=>{\r\n    const isFetching=useSelector((state:AppStateType)=>state.friendPage.isFetching)\r\n\r\n    \r\n    return(\r\n        <>\r\n        {isFetching ?<Preloader/>:null}\r\n        <FriendPage />\r\n        </>\r\n    )\r\n} \r\n\r\n\r\nexport default FriendPageContainer","import { AppStateType } from \"./redux-store\"\r\n\r\nexport const selectorUsers=(state: AppStateType)=>{\r\n    return state.usersPage.users\r\n}\r\nexport const selectorPageSize=(state: AppStateType)=>{\r\n    return state.usersPage.pageSize\r\n}\r\nexport const selectorTotalUsersCount=(state:AppStateType)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\nexport const selectorCurrentPage=(state:AppStateType)=>{\r\n    return state.usersPage.currentPage\r\n}\r\nexport const selectorIsfetcing=(state:AppStateType)=>{\r\n    return state.usersPage.isfetcing\r\n}\r\nexport const selectorFollowingInProgress=(state:AppStateType)=>{\r\n    return state.usersPage.followingInProgress\r\n}\r\n\r\nexport const selectorTerm=(state:AppStateType)=>{\r\n    return state.usersPage.term\r\n}\r\n\r\nexport const selectorFriend=(state:AppStateType)=>{\r\n    return state.usersPage.friend\r\n}","import React from 'react';\r\nimport { Formik, Form, FormikHelpers } from 'formik';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectorFriend, selectorTerm } from '../../redux/usersSelector';\r\nimport { InputBase, makeStyles, createStyles, Theme, fade, NativeSelect, Button, Container } from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\n\r\ntype PropsType = {\r\n    searchUsers: (term: string, friend: null | boolean) => void\r\n\r\n}\r\ntype ValuesFormType = {\r\n    term: string\r\n    friend: null | boolean\r\n}\r\ntype ValuesType = {\r\n    term: string\r\n    friend: 'null' | 'true' | 'false'\r\n}\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n    createStyles({\r\n        selectEmpty: {\r\n            marginTop: theme.spacing(2),\r\n        },\r\n        container: {\r\n            align: 'center'\r\n        },\r\n        search: {\r\n            position: 'relative',\r\n            borderRadius: theme.shape.borderRadius,\r\n            backgroundColor: fade(theme.palette.common.white, 0.15),\r\n            '&:hover': {\r\n                backgroundColor: fade(theme.palette.common.white, 0.25),\r\n            },\r\n            marginRight: theme.spacing(2),\r\n            marginLeft: 0,\r\n            width: '100%',\r\n            [theme.breakpoints.up('sm')]: {\r\n                marginLeft: theme.spacing(3),\r\n                width: 'auto',\r\n            },\r\n        },\r\n        searchIcon: {\r\n            padding: theme.spacing(0, 2),\r\n            height: '100%',\r\n            position: 'absolute',\r\n            pointerEvents: 'none',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'center',\r\n        },\r\n        inputRoot: {\r\n            color: 'inherit',\r\n        },\r\n        button: {\r\n            marginLeft: 20\r\n        },\r\n        inputInput: {\r\n            padding: theme.spacing(1, 1, 1, 0),\r\n            // vertical padding + font size from searchIcon\r\n            paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n            transition: theme.transitions.create('width'),\r\n            width: '100%',\r\n            [theme.breakpoints.up('md')]: {\r\n                width: '20ch',\r\n            },\r\n        }\r\n    }),\r\n);\r\n\r\nconst SearchFilter: React.FC<PropsType> = React.memo((props) => {\r\n    const classes = useStyles();\r\n\r\n    const term = useSelector(selectorTerm)\r\n    const friend = useSelector(selectorFriend)\r\n\r\n    let searchUsers = (values: ValuesType, { setSubmitting }: FormikHelpers<ValuesType>) => {\r\n        \r\n        const filter: ValuesFormType = {\r\n            term: values.term,\r\n            friend: values.friend === 'null' ? null : values.friend === 'true' ? true : false\r\n        }\r\n        props.searchUsers(filter.term, filter.friend)\r\n        setSubmitting(false);\r\n    }\r\n\r\n\r\n    return (<>\r\n        <div>\r\n            <Formik\r\n                enableReinitialize\r\n                initialValues={{ term: term, friend: String(friend) as 'null' | 'true' | 'false' }}\r\n                onSubmit={searchUsers}\r\n            >\r\n                {({ isSubmitting, handleChange, handleSubmit }) => (\r\n                    <Form onSubmit={handleSubmit}>\r\n                        <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                            </div>\r\n\r\n                            <InputBase\r\n                                onChange={handleChange}\r\n                                type=\"text\"\r\n                                name=\"term\"\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                            />\r\n                        </div>\r\n                        <Container className={classes.container}>\r\n                            <NativeSelect name=\"friend\" className={classes.selectEmpty} onChange={handleChange}>\r\n                                <option value=\"null\">All Users</option>\r\n                                <option value=\"true\">Only friend</option>\r\n                                <option value=\"false\">Not friend</option>\r\n                            </NativeSelect>\r\n\r\n                            <Button className={classes.button} variant=\"contained\" type=\"submit\" disabled={isSubmitting}>\r\n                                Search\r\n           </Button>\r\n                        </Container>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    </>\r\n    )\r\n})\r\n\r\nexport default SearchFilter","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport userPhto from '../../assets/images/user.png'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { UserType } from '../../types/types';\r\n\r\ntype PropsType={\r\n    user: UserType\r\n    followingInProgress:Array<number>\r\n    follow:(userId: number)=>void\r\n    unfollow:(userId: number)=>void\r\n}\r\n\r\nlet UseR:React.FC<PropsType>= ({ user, followingInProgress, follow, unfollow }) => {\r\n    let u = user;\r\n    return (\r\n        <div className={s.user_wrapper}>\r\n            <div className={s.user_photo}>\r\n                <NavLink to={'/profile/' + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : userPhto} alt=\"description\"></img>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.user_name}>\r\n                <div>{u.name}</div>\r\n            </div>\r\n            <div className={s.user_button}>\r\n                {u.followed \r\n                    ? <button className={s.user_buttonUnfollow} disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                        unfollow(u.id)\r\n                    }\r\n                    }>Unfollow</button>\r\n                    : <button className={s.user_buttonFollow} disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                        follow(u.id)\r\n                    }\r\n                    }>Follow</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UseR;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getUsers, follow, unfollow } from '../../redux/usersReducer';\r\nimport { selectorCurrentPage, selectorFollowingInProgress, selectorFriend, selectorPageSize, selectorTotalUsersCount, selectorUsers } from '../../redux/usersSelector';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport SearchFilter from './SearchFilter';\r\nimport UseR from './UseR';\r\nimport s from './Users.module.css'\r\nimport { selectorTerm } from './../../redux/usersSelector';\r\nimport { useHistory } from 'react-router';\r\n\r\ntype AdressType={\r\n    term?: string\r\n    friend?: string\r\n    currentPage?:string\r\n}\r\n\r\nlet Users: React.FC = () => {\r\n\r\n    const currentPage = useSelector(selectorCurrentPage)\r\n    const totalUsersCount = useSelector(selectorTotalUsersCount)\r\n    const pageSize = useSelector(selectorPageSize)\r\n    const users = useSelector(selectorUsers)\r\n    const term = useSelector(selectorTerm)\r\n    const friend = useSelector(selectorFriend)\r\n    const followingInProgress = useSelector(selectorFollowingInProgress)\r\n\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    useEffect(() => {\r\n        const queryString = require('query-string');\r\n        const parsed = queryString.parse(history.location.search)\r\n\r\n        let actualCurrentPage = currentPage\r\n        let actualTerm = term\r\n        let actualFriend = friend\r\n\r\n        if (parsed.page)  actualCurrentPage = Number(parsed.page) \r\n        if (parsed.term)  actualTerm = parsed.term \r\n\r\n        switch (parsed.friend) {\r\n            case 'null':\r\n                actualFriend = null\r\n                break\r\n            case 'true':\r\n                actualFriend = true\r\n                break\r\n            case 'false':\r\n                actualFriend = false\r\n                break\r\n        }\r\n        dispatch(getUsers(actualCurrentPage, pageSize, actualTerm, actualFriend))\r\n    }, [])\r\n\r\n\r\n    useEffect(() => {\r\n        let adress:AdressType = {}\r\n\r\n        if(term) adress.term =term\r\n        if(friend !==null) adress.friend=String(friend)\r\n        if(currentPage!==1) adress.currentPage=String(currentPage)\r\n\r\n        const queryString = require('query-string');\r\n        \r\n        history.push({\r\n            pathname: '/users',\r\n            search: queryString.stringify(adress)\r\n        })\r\n    }, [term, friend, currentPage])\r\n\r\n    const searchUsers = (term: string, friend: null | boolean) => {\r\n        dispatch(getUsers(1, pageSize, term, friend))\r\n    }\r\n    const onPageChanged = (currentPage: number) => {\r\n        dispatch(getUsers(currentPage, pageSize, term, friend))\r\n    }\r\n    const followUser = (userId: number) => {\r\n        dispatch(follow(userId))\r\n    }\r\n\r\n    const unfollowUser = (userId: number) => {\r\n        dispatch(unfollow(userId))\r\n    }\r\n\r\n    return <div>\r\n        <div>\r\n            <SearchFilter searchUsers={searchUsers} />\r\n        </div>\r\n        <Paginator currentPage={currentPage}\r\n            onPageChanged={onPageChanged}\r\n            totalItemCount={totalUsersCount}\r\n            pageSize={pageSize} />\r\n        <div className={s.users_wrapper}>\r\n            {users.map(u => <div key={u.id}>\r\n                <UseR user={u} follow={followUser} unfollow={unfollowUser}\r\n                    followingInProgress={followingInProgress} />\r\n            </div>)}\r\n        </div>\r\n    </div>\r\n}\r\n\r\n\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Users from './Users';\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { selectorIsfetcing } from '../../redux/usersSelector';\r\n\r\nconst UsersPage=()=>{\r\n    const isfetcing=useSelector(selectorIsfetcing)\r\n    return(\r\n        <> \r\n            {isfetcing ? <Preloader /> : null}\r\n            <Users/>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default UsersPage","import React, { useEffect } from 'react';\nimport { withSuspense } from './hoc/withSuspense';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Music from './components/Music/Music';\nimport Setting from './components/Setting/Setting';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport store, { AppStateType } from './redux/redux-store';\nimport { Provider, useDispatch } from \"react-redux\"\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/LoginPage';\nimport { useSelector } from 'react-redux';\nimport { Redirect, withRouter } from 'react-router';\nimport { initializeApp } from './redux/appReducer';\nimport Preloader from './components/common/preloader/Preloader';\nimport FooterContainer from './components/Footer/FooterContainer';\nimport FriendPageContainer from './components/FreindPage/FriendPageContainer';\nimport UsersPage from './components/Users/UsersContainer';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport { AppBar} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst DialogContainer = React.lazy(() => import('./components/Dialog/DialogContainer'));\nconst ChatPage = React.lazy(() => import('./webSocket_pages/chat/ChatPages'))\n\nconst SuspenseDialog = withSuspense(DialogContainer)\nconst SuspenseChatPages = withSuspense(ChatPage)\n\nconst useStyles = makeStyles((theme) => ({\n  link: {\n    display: 'flex',\n  },\n  icon: {\n    marginRight: theme.spacing(0.5),\n    width: 20,\n    height: 20,\n  },\n  root: {\n    flexGrow: 1\n\n  },\n  mainContent: {\n    marginTop: theme.spacing(10)\n\n  },\n  content: {\n    backgroundColor: 'rgba(189, 189, 189, 0.233)'\n  }\n})\n)\n\n\nconst App: React.FC = () => {\n  const classes = useStyles();\n\n  const isInitialised = useSelector((state: AppStateType) => state.app.isInitialised)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(initializeApp())\n  }, [])\n\n  if (!isInitialised) {\n    return <Preloader />\n  }\n\n  return (\n\n    <>\n      <AppBar position=\"fixed\" >\n        <HeaderContainer />\n      </AppBar>\n\n      <Paper elevation={0} className={classes.mainContent}>\n\n        <Container fixed>\n          <Grid container spacing={2}>\n            <Grid item xs={2}>\n              <Navbar />\n            </Grid>\n\n            <Grid item xs={10} className={classes.content}>\n              <Route exact path='/' render={() => <Redirect to={\"/profile\"} />} />\n              <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n              {/*<Route path='/dialog' render={() => <DialogContainer />} />*/}\n              <Route path='/dialog' render={() => <SuspenseDialog />} />\n              <Route path='/music' render={() => <Music />} />\n              <Route path='/setting' render={() => <Setting />} />\n              <Route path='/users' render={() => <UsersPage />} />\n              <Route path='/login' render={() => <LoginPage />} />\n              {/*<Route path='*' render={() => (<div>404 NOT FOUND</div>)} />*/}\n              <Route path='/friendpage' render={() => <FriendPageContainer />} />\n              <Route path='/chat' render={() => <SuspenseChatPages />} />\n            </Grid>\n\n            <Grid item xs={12}>\n              <FooterContainer />\n            </Grid>\n\n          </Grid>\n        </Container>\n      </Paper>\n\n    </>\n  )\n}\n\n\nlet AppC = withRouter(App)\n\nconst AppContainer = () => {\n  return (\n    <AppC />\n  )\n}\n\nlet MainApp: React.FC = () => {\n  return <HashRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </HashRouter>\n}\n\nexport default MainApp\n","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n\n\n  ReactDOM.render(\n      <MainApp /> , document.getElementById('root')\n  )\n  \n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__UerlR\",\"item\":\"Navbar_item__3uoy-\",\"active\":\"Navbar_active__1aqQl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form_block_name_status\":\"ProfileForm_form_block_name_status__3tRcD\",\"fullName\":\"ProfileForm_fullName__1gRGJ\",\"status\":\"ProfileForm_status__2d0Wu\",\"status_input\":\"ProfileForm_status_input__2nSQ0\",\"button_edit\":\"ProfileForm_button_edit__2BJYY\",\"form_block_job_contacts\":\"ProfileForm_form_block_job_contacts__1c0TP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users_wrapper\":\"Users_users_wrapper__2iSEQ\",\"user_wrapper\":\"Users_user_wrapper__ay5dj\",\"user_photo\":\"Users_user_photo__3xj3L\",\"user_button\":\"Users_user_button__39lDl\",\"user_buttonUnfollow\":\"Users_user_buttonUnfollow__253Cc\",\"user_name\":\"Users_user_name__2qYQq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"description\":\"Profileinfo_description__3wem2\",\"backgroundImg\":\"Profileinfo_backgroundImg__1vVEI\",\"photo\":\"Profileinfo_photo__L8xd2\",\"editPhoto\":\"Profileinfo_editPhoto__1MR1c\",\"editPhoto_Wrapper\":\"Profileinfo_editPhoto_Wrapper__17duZ\",\"editPhoto_input\":\"Profileinfo_editPhoto_input__-yVFm\",\"editPhoto_label\":\"Profileinfo_editPhoto_label__tQNC1\",\"form_wrapper\":\"Profileinfo_form_wrapper__paOyD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendsPage_wrapper\":\"FriendPage_friendsPage_wrapper__3s0gI\",\"friendPage_flex\":\"FriendPage_friendPage_flex__1MC6Z\",\"friend_info\":\"FriendPage_friend_info__Ckecn\",\"friend_info_name\":\"FriendPage_friend_info_name__KnlpR\",\"friend_info_status\":\"FriendPage_friend_info_status__2LC_-\",\"friendButtonFollow\":\"FriendPage_friendButtonFollow__cAR_w\",\"friendButtonMessage\":\"FriendPage_friendButtonMessage__1-CXX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_wrapper\":\"LoginPage_login_wrapper__3Lf8v\",\"loginForm\":\"LoginPage_loginForm__1u2kc\",\"error\":\"LoginPage_error__3u0Zt\",\"buttonLogin\":\"LoginPage_buttonLogin__14Yyk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1FlvS\",\"posts\":\"MyPosts_posts__32t08\",\"inputPostBlock\":\"MyPosts_inputPostBlock__3ulrU\",\"buttonPost\":\"MyPosts_buttonPost__pCivc\",\"error\":\"MyPosts_error__1_DOy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formChange_wrapper\":\"ProfileFormChange_formChange_wrapper__XKTfS\",\"contacts\":\"ProfileFormChange_contacts__2sB8Z\",\"buttonSave\":\"ProfileFormChange_buttonSave__1UTGa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"footer\":\"Footer_footer__2NedM\",\"footer_contacts\":\"Footer_footer_contacts__3GBOu\",\"create\":\"Footer_create___S9Iu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__YfgDA\",\"pageNumber\":\"Paginator_pageNumber__1VC4O\",\"activePage\":\"Paginator_activePage__2sABI\"};"],"sourceRoot":""}