{"version":3,"sources":["components/Login/LoginPage.module.css","reportWebVitals.js","components/Navbar/Navbar.jsx","components/Music/Music.jsx","components/Setting/Setting.jsx","api/api.js","redux/authReducer.js","redux/profileReducer.js","redux/sidebarReducer.js","redux/usersReducer.js","redux/appReducer.js","redux/newsReducer.js","Trenirovka.Store/message-reducer.js","Trenirovka.Store/post-reducer.js","Trenirovka.Store/comment-reducer.js","Trenirovka.Store/usersTrReducer.js","Trenirovka.Store/profile-reducer.js","Trenirovka.Store/header-reducer.js","Trenirovka.Store/UserPageReducer.js","redux/redux-store.js","components/common/Paginator/Paginator.jsx","assets/images/user.img","components/Users/UseR.jsx","components/Users/Users.jsx","assets/images/preloader.gif","components/common/preloader/Preloader.js","redux/usersSelector.jsx","components/Users/UsersContainer.jsx","components/Profile/Profileinfo/StatusHook.jsx","components/Profile/Profileinfo/Profileinfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Login/LoginPage.jsx","components/Trenirovka/Dialog/TRItem.jsx","components/Trenirovka/Dialog/TRDialog.jsx","components/common/FormControls/FormControls.jsx","components/Trenirovka/Dialog/MessageForm.jsx","components/Trenirovka/Dialog/DialogMain.jsx","components/Trenirovka/Dialog/DialogMainContainer.jsx","components/Trenirovka/Post/Posts.jsx","components/Trenirovka/Post/PostMain.jsx","components/Trenirovka/Post/PostMainContainer.jsx","components/Trenirovka/Comment/Comment.jsx","components/Trenirovka/Comment/CommentMain.jsx","components/Trenirovka/Comment/CommentMainContainer.jsx","components/Trenirovka/Trenirovka.jsx","components/Trenirovka/News/NewsData.jsx","components/Trenirovka/News/News.jsx","components/Trenirovka/News/NewsContainer.jsx","components/Trenirovka/News/NewsPage.jsx","components/Trenirovka/UsersTrenirivka/UsersT.jsx","components/Trenirovka/UsersTrenirivka/UsersTContainer.jsx","components/Trenirovka/Profile/StatusHook.jsx","components/Trenirovka/Profile/ProfileTr.jsx","components/Trenirovka/Profile/ProfileTrContainer.jsx","components/Trenirovka/TrenirovkaPage/UserPage.jsx","components/Trenirovka/TrenirovkaPage/UserPageContainer.jsx","App.js","hoc/withSuspense.js","index.js","hoc/withAuthRedirect.js","components/Trenirovka/News/News.module.css","components/common/Paginator/Paginator.module.css","components/Trenirovka/UsersTrenirivka/UsersT.module.css","utils/validators/validators.js","components/Profile/MyPosts/MyPosts.module.css","components/Header/Header.module.css","redux/dialogReducer.js","components/Trenirovka/Trenirovka.module.css","components/Users/Users.module.css","components/Profile/Profileinfo/Profileinfo.module.css","components/Profile/MyPosts/Post/Post.module.css","components/common/FormControls/FormControls.module.css","components/Navbar/Navbar.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Navbar","className","s","nav","item","to","activeClassName","active","Music","props","Setting","instanse","axios","create","withCredentials","headers","baseURL","usersApi","getUsers","currentPage","pageSize","get","response","data","postFollow","id","post","deleteFollow","delete","getProfile","userId","authApi","email","password","rememberMe","profileApi","status","put","trenirovkaApi","selectedPage","SET_USER_DATA","initialState","login","isAuth","setUserData","type","payload","getLogin","dispatch","resultCode","authReducer","state","action","ADD_POST","SET_USER_PROFILE","SET_STATUS","DEL_POST","posts","message","likesNumber","profile","setStatus","profileReducer","newPost","newPostText","filter","p","sidebarReducer","FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_CURRENT","TOOGLE_IS_FETCING","TOOGLE_IS_FOLLOWING_PROGRESS","users","totalUsersCount","isfetcing","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toogleIsFetcing","tooggleFollowingProgress","followUnfollowChange","apiMethod","actionCreator","a","usersReducer","map","u","followed","totalCount","INITIALISED_SUCCESS","isInitialised","appReducer","CHANGE_NEWS","ADD_NEWS","newsPage","name","news","newsTextInitial","newsReducer","newsText","ADD_MESSAGE","dialog","messages","newMessageText","messageReducer","newMessage","CHANGE_POST","avatar","likesCount","postReducer","ADD_COMMENT","CHANGE_COMMENT","comment","newCommentText","commentReducer","newComment","FOLLOWED","UNFOLLOWED","SET_SELECTED_PAGE","SET_TOTAL_USERS_COUNT","IS_FETCHING","FOLLOWING_IN_PROGRESS","totalCountUser","isFetching","followingProgress","setUsers","toogleIsFetching","usertsTrReducer","usersId","SET_PROFILE_PAGE","setProfilePage","profileTrReducer","GET_AUTH_DATA","HeaderTrReducer","photo","UserPReducer","reducers","combineReducers","profilePage","messagesPage","dialogReducer","sidebar","usersPage","auth","app","messagePage","postPage","commentPage","usersTr","profileTr","authTr","userP","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","__store__","Paginator","onPageChanged","portionSize","pageNumber","Math","ceil","page","i","push","portionCount","useState","numberPortion","setnumberPortion","leftPortionPageNumber","rightPortionPageNumber","paginator","onClick","cn","activePage","e","UseR","user","follow","unfollow","src","photos","small","userPhto","userPhoto","disabled","some","Users","Preloader","preloader","style","width","height","selectorUsers","selectorPageSize","selectorTotalUsersCount","selectorCurrentPage","selectorIsfetcing","selectorFollowingInProgress","UsersContainer","this","React","Component","connect","bind","items","StatusHook","editMode","setEditMode","useEffect","onChange","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","description","fullName","large","Post","validateForm","values","errors","length","MyPosts","postElement","el","postsBlock","initialValues","validate","onSubmit","setSubmitting","addPost","touched","handleChange","handleBlur","handleSubmit","isSubmitting","MyPostsContainer","addPostActionCreator","Profile","ProfileContainer","match","params","authUserId","history","getStatus","withRouter","Header","header","loginBlock","logout","HeaderContainer","test","error","checkbox","onSubmitProps","isValid","placeholder","TRItem","path","TRDialog","Textarea","form","field","FormMessage","maxLength","submitMessage","component","DialogMain","dialogsElement","messagesElement","buttonMessageContainer","DialogMainContainer","addMessageActionCreator","Posts","namePost","likes","PostMain","target","postChangeContainer","preventDefault","buttonPostContainer","PostMainContainer","Comment","commentForm","borderName","CommentMain","commentElement","imgComment","commentChangeContainer","buttonCommentContainer","CommentMainContainer","Trenirovka","NewsData","News","newsDataElement","changeNewsContainer","addNewsContainer","NewsContainer","changeNewsActionCreator","NewsPage","UsersContent","setSelectedPage","UserImg","unfollowThunk","followThunk","UsersTContainer","setSelectedPageThunk","getUsersThunk","UsersT","withAuthRedirect","StatusTHook","updateStatusThunk","ProfileTr","aboutMe","ProfileTrContainer","getProfilePageThunk","getStatusThunk","UserPage","UserContainerPage","DialogContainer","lazy","App","initializeApp","render","fallback","LoginPage","UserPageContainer","AppContainer","promise","Promise","all","MainApp","basename","process","ReactDOM","document","getElementById","mapStateToPropsForRedirect","RedirectComponent","SEND_MESSAGE_BODY","dialogs","sendMessageBodyActionCreator","body"],"mappings":"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","file":"static/js/main.b91a8647.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"someerror\":\"LoginPage_someerror__4XHOo\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Navbar.module.css';\r\n\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n\r\n            <div className={`${s.item}`}>\r\n                <NavLink to=\"/profile\" activeClassName={s.active}>Profile</NavLink>\r\n            </div>\r\n\r\n            <div className={`${s.item}`}>\r\n                <NavLink to=\"/dialog\" activeClassName={s.active}> Messages</NavLink>\r\n            </div>\r\n\r\n            \r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/music\" activeClassName={s.active}>Music</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/setting\" activeClassName={s.active}>Setting</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/users\" activeClassName={s.active}>Users</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/trenirovka\" activeClassName={s.active}>Trenirovka</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/news\" activeClassName={s.active}>News</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/userstrenitovka\" activeClassName={s.active}>UsersTr</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/profiletrenirovka\" activeClassName={s.active}>ProfileTr</NavLink>\r\n            </div>\r\n\r\n            <div className={s.item}>\r\n                <NavLink to=\"/userpage\" activeClassName={s.active}>UserPage</NavLink>\r\n            </div>\r\n\r\n\r\n        </nav>\r\n    )\r\n}\r\n\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Music = (props)=>{\r\n    return(\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Music;","import React from 'react';\r\n\r\nconst Setting = (props)=>{\r\n    return(\r\n        <div>\r\n            Setting \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Setting ;","import axios from 'axios';\r\n\r\nconst instanse= axios.create({\r\n    withCredentials: true,\r\n    headers: { \"API-KEY\": \"e33a9b28-32d1-4022-81b8-0bd4ba992caa\" },\r\n    baseURL: `https://social-network.samuraijs.com/api/1.0/`\r\n})\r\n\r\nexport const usersApi ={\r\n    getUsers(currentPage, pageSize){\r\n        return instanse.get(`users?page=${currentPage}&count=${pageSize}`)\r\n            .then(response=>{\r\n                return response.data})\r\n    }, \r\n    postFollow(id){\r\n        return instanse.post(`follow/${id}`, {})                                   \r\n    },\r\n    \r\n    deleteFollow(id){\r\n        return instanse.delete(`follow/${id}`)\r\n    },\r\n    getProfile(userId){\r\n        return instanse.get(`profile/`+userId)\r\n    }\r\n\r\n}\r\n\r\nexport const authApi={\r\n    getLogin(){\r\n        return instanse.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe){\r\n        return instanse.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout(){\r\n        return instanse.delete(`auth/login`)\r\n    }\r\n\r\n}\r\n\r\nexport const profileApi={\r\n    getStatus(userId){\r\n        return instanse.get(`profile/status/`+userId)\r\n    },\r\n    updateStatus(status){\r\n        return instanse.put(`profile/status`, {status: status})\r\n    }\r\n}\r\n\r\nexport const trenirovkaApi={\r\n    getUsersTr(pageSize, selectedPage){\r\n        return instanse.get(`users?count=${pageSize}&page=${selectedPage}`)\r\n    },\r\n    follow(id){\r\n        return instanse.post(`follow/${id}`, {})\r\n    },\r\n    unfollow(id){\r\n        return instanse.delete(`follow/${id}`, {})\r\n    },\r\n    getProfilePage(userId){\r\n        return instanse.get (`profile/` + userId)\r\n    },\r\n    getAuth(){\r\n        return instanse.get(`auth/me`)\r\n    },\r\n    getStatus(userId){\r\n        return instanse.get(`profile/status/`+ userId)\r\n    },\r\n    updateStatus(status){\r\n        return instanse.put(`profile/status`, {status: status})\r\n    },\r\n    login(email, password, rememberMe=false){\r\n        return instanse.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout(){\r\n        return instanse.delete(`auth/login`)\r\n    }\r\n}","import { authApi } from \"../api/api\";\r\n\r\nlet SET_USER_DATA = 'SET_USER_DATA'\r\n//let STOP_SUBMIT = 'STOP_SUBMIT'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n   // error: \"i\"\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n\r\n      //  case STOP_SUBMIT:\r\n            return {\r\n                ...state,\r\n                error: state.action.error\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport const setUserData = (id, email, login, isAuth) => ({\r\n    type: SET_USER_DATA,\r\n    payload: { id, email, login, isAuth }\r\n})\r\n\r\n//export const stopSubmit = (error) => ({\r\n//    type: STOP_SUBMIT, error\r\n//})\r\n\r\n\r\nexport const getLogin = () => {\r\n    return (dispatch) => {\r\n        authApi.getLogin()\r\n            .then(response => {\r\n\r\n                if (response.data.resultCode === 0) { \r\n                    let { id, email, login } = response.data.data;\r\n                    dispatch(setUserData(id, email, login, true))\r\n                }\r\n            });\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => (dispatch)=> {\r\n    \r\n    authApi.login(email, password, rememberMe)\r\n    \r\n        .then(response => {\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(getLogin())\r\n            } else{\r\n              //  let message = response.data.messages.length > 0 ? response.data.messages[0] : \"some error\"\r\n            //dispatch(stopSubmit(response.data.messages[0]))\r\n            }\r\n        })\r\n    }\r\n\r\nexport const logout = () => {\r\n    return (dispatch) => {\r\n        authApi.logout()\r\n            .then(response => {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setUserData(null, null, null, false))\r\n                }\r\n            })\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import { profileApi, usersApi } from \"../api/api\";\r\n\r\nconst ADD_POST = 'profile/ADD-POST';\r\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE'\r\nconst SET_STATUS = 'profile/SET_STATUS'\r\nconst DEL_POST='profile/DEL_POST'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        { id: 1, message: 'Hi, how are you?', likesNumber: '22' },\r\n        { id: 2, message: 'I am fine!', likesNumber: '18' },\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n}\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST:\r\n            let newPost = {\r\n                id: 3,\r\n                message: action.newPostText,\r\n                likesNumber: 0\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost]\r\n            }\r\n\r\n        case SET_USER_PROFILE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        \r\n        case DEL_POST:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(p=>p.id !==action.id)\r\n            }\r\n\r\n        default:\r\n            return state;\r\n\r\n\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({ type: ADD_POST, newPostText })\r\n\r\nexport const deletePostActionCreator=(id)=>({\r\n    type: DEL_POST, id\r\n})\r\n\r\nexport const setUserProfile = (profile) => ({\r\n    type: SET_USER_PROFILE, profile\r\n})\r\n\r\nexport const setStatus = (status) => ({\r\n    type: SET_STATUS, status\r\n})\r\n\r\nexport const getProfile = (userId) => {\r\n    return async(dispatch) => {\r\n\r\n        let response=await usersApi.getProfile(userId)\r\n            { dispatch(setUserProfile(response.data)) }\r\n    }\r\n}\r\n\r\nexport const getStatus = (userId) => {\r\n    return async(dispatch) => {\r\n        let response=await profileApi.getStatus(userId)\r\n             { dispatch(setStatus(response.data)) }\r\n    }\r\n}\r\n\r\nexport const updateStatus = (status) => {\r\n    return async (dispatch) => {\r\n        let response=await profileApi.updateStatus(status)\r\n             {\r\n                if (response.data.resultCode === 0) {\r\n                    dispatch(setStatus(status))\r\n                }\r\n            }\r\n    }\r\n}\r\n\r\nexport default profileReducer;\r\n\r\n","let initialState ={}\r\n\r\nconst sidebarReducer=(state=initialState, action)=>{\r\n\r\n    return state\r\n}\r\n\r\nexport default sidebarReducer;","import { usersApi } from \"../api/api\";\r\n\r\n\r\nconst FOLLOW = 'users/FOLLOW';\r\nconst UNFOLLOW = 'users/UNFOLLOW';\r\nconst SET_USERS = 'users/SET_USERS';\r\nconst SET_CURRENT_PAGE = 'users/SET_CURRENT_PAGE';\r\nconst SET_TOTAL_CURRENT = 'users/SET_TOTAL_CURRENT';\r\nconst TOOGLE_IS_FETCING = 'users/TOOGLE_IS_FETCING';\r\nconst TOOGLE_IS_FOLLOWING_PROGRESS = 'users/TOOGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 50,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isfetcing: true,\r\n    followingInProgress: []\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n              //  users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n                users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                //users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n               users: state.users.map(u => {\r\n                    if (u.id === action.userId) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u;\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            {\r\n                return {\r\n                    ...state, users: action.users\r\n                }\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            {\r\n                return {\r\n                    ...state, currentPage: action.currentPage\r\n                }\r\n            }\r\n        case SET_TOTAL_CURRENT:\r\n            {\r\n                return {\r\n                    ...state, totalUsersCount: action.totalCount\r\n                }\r\n            }\r\n        case TOOGLE_IS_FETCING:\r\n            {\r\n                return {\r\n                    ...state, isfetcing: action.isfetcing\r\n                }\r\n            }\r\n        case TOOGLE_IS_FOLLOWING_PROGRESS:\r\n            {\r\n                return {\r\n                    ...state,\r\n                    followingInProgress: action.isfetcing ?\r\n                        [...state.followingInProgress, action.userId] :\r\n                        state.followingInProgress.filter(id => id !== action.userId)\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({\r\n    type: FOLLOW, userId\r\n})\r\n\r\nexport const unfollowSuccess = (userId) => ({\r\n    type: UNFOLLOW, userId\r\n})\r\n\r\nexport const setUsers = (users) => ({\r\n    type: SET_USERS, users\r\n})\r\n\r\nexport const setCurrentPage = (currentPage) => ({\r\n    type: SET_CURRENT_PAGE, currentPage\r\n})\r\n\r\nexport const setTotalCount = (totalCount) => ({\r\n        type: SET_TOTAL_CURRENT, totalCount\r\n    })\r\n\r\nexport const toogleIsFetcing = (isfetcing) => ({\r\n    type: TOOGLE_IS_FETCING, isfetcing\r\n})\r\n\r\nexport const tooggleFollowingProgress = (isfetcing, userId) => ({\r\n    type: TOOGLE_IS_FOLLOWING_PROGRESS, isfetcing, userId\r\n})\r\n\r\n\r\nexport const getUsers = (currentPage, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toogleIsFetcing(true))\r\n        dispatch(setCurrentPage(currentPage))\r\n        let data = await usersApi.getUsers(currentPage, pageSize)\r\n\r\n        dispatch(toogleIsFetcing(false))\r\n        dispatch(setUsers(data.items))\r\n        dispatch(setTotalCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowChange = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(tooggleFollowingProgress(true, userId))\r\n    let response = await apiMethod(userId)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId))\r\n    }\r\n    dispatch(tooggleFollowingProgress(false, userId))\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowChange(dispatch, userId, usersApi.postFollow.bind(usersApi), followSuccess)\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowChange(dispatch, userId, usersApi.deleteFollow.bind(usersApi), unfollowSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport default usersReducer","import { getLogin } from './authReducer';\r\n\r\nlet INITIALISED_SUCCESS = 'INITIALISED_SUCCESS'\r\n\r\nlet initialState = {\r\n    isInitialised: false,\r\n}\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALISED_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isInitialised: true\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const initializedSuccess = () => ({\r\n    type: INITIALISED_SUCCESS\r\n})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n        let promise = dispatch(getLogin());\r\n        Promise.all([promise]).then(() => {\r\n            dispatch(initializedSuccess())\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\nexport default appReducer;","const CHANGE_NEWS = 'CHANGE_NEWS'\r\nconst ADD_NEWS= 'ADD_NEWS'\r\n\r\nlet initialState = {\r\n    newsPage: [\r\n        { data: \"22.04.21\", name: 'Nastya', news: 'Today i has a good day. Look at my profile to see it!!!!' },\r\n        { data: \"23.04.21\", name: 'Maksim', news: 'Sooooooooooooooooooooooooooooooooooooooooooooooooooooooooooo' },\r\n        { data: \"29.04.21\", name: 'Katya', news: 'klaaaas, i do it!' },\r\n        { data: \"01.05.21\", name: 'Veronila', news: 'Do you wony to see me? Klick my profile' },\r\n        { data: \"02.05.21\", name: 'Evgenia', news: 'Today i eat yammy desers' }\r\n    ],\r\n    newsTextInitial: \"news\"\r\n\r\n}\r\n\r\nconst newsReducer=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case CHANGE_NEWS:\r\n\r\n            return{\r\n                ...state,\r\n                newsTextInitial: action.newsText\r\n            }\r\n        case ADD_NEWS:\r\n            return{\r\n                ...state,\r\n                newsTextInitial:'',\r\n                newsPage: [...state.newsPage, {\r\n                    data: \"02.05.21\",\r\n                    name: \"Nastya\", \r\n                    news: state.newsTextInitial}]\r\n            }\r\n                  \r\n        default:\r\n             return state\r\n       \r\n    }\r\n\r\n}\r\n\r\n\r\nexport const changeNewsActionCreator = (newsText) => ({\r\n    type: CHANGE_NEWS,\r\n    newsText: newsText\r\n})\r\n\r\nexport const addNewsActionCreator = () => ({\r\n    type: ADD_NEWS\r\n})\r\n\r\n\r\n\r\nexport default newsReducer","const ADD_MESSAGE = 'ADD_MESSAGE'\r\n\r\n\r\nlet initialState={\r\n    dialog: [\r\n        { name: \"Nastya\", userId: \"1\" },\r\n        { name: \"Maksim\", userId: \"2\" },\r\n        { name: \"Lida\", userId: \"3\" },\r\n        { name: \"Igor\", userId: \"4\" },\r\n        { name: \"Vasilisa\", userId: \"5\" },\r\n    ],\r\n\r\n    messages: [\r\n        { message: \"HI\", id: \"1\" },\r\n        { message: \"Yooooooooo :)\", id: \"2\" },\r\n        { message: \"Nihao...\", id: \"3\" },\r\n        { message: \"I am fine!!!!!!!!!\", id: \"4\" },\r\n        { message: \"Kukuuuuuuu\", id: \"5\" },\r\n    ],\r\n    newMessageText: \"message\"\r\n}\r\n\r\nconst messageReducer=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n        case ADD_MESSAGE:\r\n\r\n            return{\r\n                ...state,\r\n                messages:[...state.messages, {\r\n                    id: 6,\r\n                    message: action.newMessage\r\n                }]\r\n            }\r\n            \r\n    \r\n            \r\n        default:\r\n             return state\r\n       \r\n    }\r\n\r\n}\r\n\r\nexport const addMessageActionCreator = (newMessage) => ({\r\n    type: ADD_MESSAGE, newMessage\r\n})\r\n\r\n\r\nexport default messageReducer","const ADD_POST = 'ADD_POST'\r\nconst CHANGE_POST = 'CHANGE_POST'\r\n\r\nlet initialState={\r\n    posts: [\r\n        { name: \"Nastya\", avatar: \"https://ulibky.ru/wp-content/uploads/2019/10/avatarki_dlya_vatsap_dlya_devushek_42_28061027.jpg\", post: \"Today is Monday\", likesCount: \"22\" },\r\n        { name: \"Nastya\", avatar: \"https://ulibky.ru/wp-content/uploads/2019/10/avatarki_dlya_vatsap_dlya_devushek_42_28061027.jpg\", post: \"Today is Friday\", likesCount: \"133\" },\r\n        { name: \"Nastya\", avatar: \"https://ulibky.ru/wp-content/uploads/2019/10/avatarki_dlya_vatsap_dlya_devushek_42_28061027.jpg\", post: \"Today is Saturday\", likesCount: \"21\" },\r\n        { name: \"Nastya\", avatar: \"https://ulibky.ru/wp-content/uploads/2019/10/avatarki_dlya_vatsap_dlya_devushek_42_28061027.jpg\", post: \"Today is ...\", likesCount: \"1\" }\r\n    ],\r\n    newPostText: \"post\"\r\n}\r\n\r\nconst postReducer=(state=initialState, action)=>{\r\n    switch (action.type) {\r\n       \r\n        case ADD_POST:\r\n            return{\r\n                ...state,\r\n                newPostText:'',\r\n                posts:[...state.posts, {\r\n                    name: \"Nastya\",\r\n                    avatar:\r\n                        \"https://ulibky.ru/wp-content/uploads/2019/10/avatarki_dlya_vatsap_dlya_devushek_42_28061027.jpg\",\r\n                    post: state.newPostText,\r\n                    likesCount: \"1\"\r\n                }]\r\n            }\r\n            \r\n        case CHANGE_POST:\r\n            return{\r\n                ...state,\r\n                newPostText:action.newPost\r\n            }\r\n           \r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\nexport const addPostActionCreator = () => ({\r\n    type: ADD_POST\r\n})\r\n\r\nexport const changePostActionCreator = (newPost) => ({\r\n    type: CHANGE_POST,\r\n    newPost: newPost\r\n})\r\n\r\nexport default postReducer","const ADD_COMMENT = 'ADD_COMMENT'\r\nconst CHANGE_COMMENT = 'CHANGE_COMMENT'\r\n\r\nlet initialState = {\r\n    comment: [\r\n        { id: \"Nastya\", comment: \"Beautiful!\" },\r\n        { id: \"Zenia\", comment: \"So preeeeeeeeeeeeeeeeetty!\" },\r\n        { id: \"Veronika\", comment: \"I love you!\" },\r\n        { id: \"Evgeni\", comment: \"woooooooooowwwww!\" },\r\n\r\n    ],\r\n    newCommentText: \"comment\"\r\n}\r\n\r\nconst commentReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n\r\n        case ADD_COMMENT:\r\n            \r\n                return {\r\n                    ...state,\r\n                    newCommentText:'',\r\n                    comment:[...state.comment, { id: \"Nastya\", comment: state.newCommentText }\r\n                    ]\r\n                }\r\n\r\n        case CHANGE_COMMENT: \r\n\r\n            return {\r\n                ...state,\r\n                newCommentText: action.newComment\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const addCommentActionCreator = () => ({\r\n    type: ADD_COMMENT\r\n})\r\n\r\nexport const changeCommentActionCreator = (newPost) => ({\r\n    type: CHANGE_COMMENT,\r\n    newPost: newPost\r\n})\r\n\r\nexport default commentReducer","import { trenirovkaApi } from \"../api/api\"\r\n\r\nlet FOLLOWED = 'FOLLOWED'\r\nlet UNFOLLOWED = 'UNFOLLOWED'\r\nlet SET_USERS ='SET_USERS'\r\nlet SET_SELECTED_PAGE='SET_SELECTED_PAGE'\r\nlet SET_TOTAL_USERS_COUNT='SET_TOTAL_USERS_COUNT'\r\nlet IS_FETCHING='IS_FETCHING'\r\nlet FOLLOWING_IN_PROGRESS='FOLLOWING_IN_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [ ],\r\n    totalCountUser: 0,\r\n    pageSize:5,\r\n    selectedPage:1,\r\n    isFetching: true,\r\n    followingProgress: []\r\n}\r\n\r\nconst usertsTrReducer = (state=initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOWED:\r\n            return {\r\n                ...state,\r\n                //users:updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n\r\n               users: state.users.map(u => {\r\n                    if (action.usersId === u.id) {\r\n                        return { ...u, followed: true }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case UNFOLLOWED:\r\n            return {\r\n                ...state,\r\n               // users:updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n                users: state.users.map(u => {\r\n                    if (action.usersId === u.id) {\r\n                        return { ...u, followed: false }\r\n                    }\r\n                    return u\r\n                })\r\n            }\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n               users: action.users\r\n            }\r\n        case SET_SELECTED_PAGE:\r\n            return {\r\n                ...state,\r\n                selectedPage: action.selectedPage  \r\n            }\r\n\r\n        case SET_TOTAL_USERS_COUNT:\r\n            return{\r\n                ...state,\r\n                totalCountUser: action.totalCountUser\r\n\r\n            }\r\n\r\n        case IS_FETCHING:\r\n            return{\r\n                ...state,\r\n                isFetching: action.isFetching\r\n            }\r\n\r\n        case FOLLOWING_IN_PROGRESS:\r\n            return{\r\n                ...state,\r\n                followingProgress: action.isFetching ? \r\n                [...state.followingProgress, action.userId ] : \r\n                state.followingProgress.filter(id=>id !==action.userId)\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n\r\n\r\n\r\n}\r\n\r\nexport const follow = (usersId) => ({\r\n    type: FOLLOWED, usersId\r\n\r\n})\r\n\r\nexport const unfollow = (usersId) => ({\r\n    type: UNFOLLOWED, usersId\r\n\r\n})\r\n\r\nexport const setUsers =(users)=>({\r\n    type: SET_USERS, users\r\n})\r\n\r\nexport const setSelectedPage=(selectedPage)=>({\r\n    type: SET_SELECTED_PAGE, selectedPage\r\n})\r\n\r\nexport const setTotalUsersCount=(totalCountUser)=>({\r\n    type: SET_TOTAL_USERS_COUNT, totalCountUser\r\n})\r\n\r\nexport const toogleIsFetching=(isFetching)=>({\r\n    type: IS_FETCHING, isFetching\r\n})\r\n\r\nexport const followingInProgress=(isFetching , userId)=>({\r\n    type: FOLLOWING_IN_PROGRESS, isFetching, userId\r\n})\r\n\r\n\r\nexport const getUsersThunk=(pageSize, selectedPage)=>{\r\n    return (dispatch)=>{\r\n        dispatch(toogleIsFetching(true))\r\n\r\n        trenirovkaApi.getUsersTr(pageSize, selectedPage)\r\n\r\n        .then(response => {\r\n                dispatch(toogleIsFetching(false))\r\n                dispatch(setUsers(response.data.items))\r\n                dispatch(setTotalUsersCount(response.data.totalCount))\r\n            })\r\n    }\r\n}\r\n\r\nexport const setSelectedPageThunk=(pageSize, p)=>{\r\n    return (dispatch)=>{\r\n       dispatch(setSelectedPage(p))\r\n        dispatch(toogleIsFetching(true))\r\n        \r\n        trenirovkaApi.getUsersTr(pageSize, p)\r\n            .then(response => {\r\n                dispatch(toogleIsFetching(false))\r\n                dispatch(setUsers(response.data.items))\r\n            })\r\n    }\r\n}\r\n\r\nexport const unfollowThunk=(userId)=>{\r\n    return (dispatch)=>{\r\n        dispatch(followingInProgress(true, userId))\r\n        trenirovkaApi.unfollow(userId)\r\n        .then(response=>{\r\n\r\n            if(response.data.resultCode===0){\r\n                dispatch(unfollow(userId))\r\n            }\r\n            dispatch(followingInProgress(false, userId))\r\n        })\r\n    }\r\n}\r\n\r\nexport const followThunk=(userId)=>{\r\n    return (dispatch)=>{\r\n        dispatch(followingInProgress(true, userId))\r\n        trenirovkaApi.follow(userId)\r\n        .then(response=>{\r\n\r\n            if(response.data.resultCode===0){\r\n                dispatch(follow(userId))\r\n            }\r\n            dispatch(followingInProgress(false, userId))\r\n        })\r\n    }\r\n}\r\n\r\n\r\nexport default usertsTrReducer","import { trenirovkaApi } from \"../api/api\"\r\n\r\nlet SET_PROFILE_PAGE='SET_PROFILE_PAGE'\r\nlet SET_STATUS='SET_STATUS'\r\n\r\n\r\nlet initialState={\r\n    profile: null,\r\n    status:''\r\n}\r\n\r\nconst profileTrReducer =(state=initialState, action)=>{\r\n    switch(action.type){\r\n        case SET_PROFILE_PAGE:\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            }\r\n\r\n        case SET_STATUS:\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }    \r\n\r\n        default:\r\n                return state\r\n    }\r\n    \r\n\r\n}\r\n\r\n\r\nexport const setProfilePage=(profile)=>({\r\n    type: SET_PROFILE_PAGE, profile\r\n})\r\n\r\nexport const setStatus=(status)=>({\r\n    type: SET_STATUS, status\r\n})\r\n\r\nexport const getProfilePageThunk=(userId)=>{\r\n    return (dispatch)=>{\r\n        \r\n        trenirovkaApi.getProfilePage(userId)\r\n        .then(response=>{\r\n            dispatch(setProfilePage(response.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const getStatusThunk=(userId)=>{\r\n    return (dispatch)=>{\r\n        trenirovkaApi.getStatus(userId)\r\n        .then(response=>{\r\n            dispatch(setStatus(response.data))\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateStatusThunk=(status)=>{\r\n    return (dispatch)=>{\r\n        trenirovkaApi.updateStatus(status)\r\n        .then(response=>{\r\n            if(response.resultCode===0){\r\n                dispatch(setStatus(status))\r\n            }\r\n            \r\n        })\r\n    }\r\n}\r\n\r\nexport default profileTrReducer","import { trenirovkaApi } from \"../api/api\"\r\n\r\nlet GET_AUTH_DATA = 'GET_AUTH_DATA'\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false\r\n}\r\n\r\n\r\nconst HeaderTrReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_AUTH_DATA:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            }\r\n\r\n\r\n\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n\r\nexport const getAuthData = (id, email, login, isAuth) => ({\r\n    type: GET_AUTH_DATA, data: { id, email, login, isAuth }\r\n})\r\n\r\nexport const getAuthDataThunk = () => {\r\n    return (dispatch) => {\r\n        trenirovkaApi.getAuth()\r\n            .then(response => {\r\n                dispatch(getAuthData(response.data.data.id, response.data.data.email, response.data.data.login, true))\r\n            })\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => {\r\n    return (dispatch) => {\r\n        trenirovkaApi.login(email, password, rememberMe)\r\n            .then(response => {\r\n                if (response.resultCode === 0)\r\n                    dispatch(getAuthDataThunk())\r\n            })\r\n    }\r\n}\r\n\r\nexport const logout= () => {\r\n    return (dispatch) => {\r\n        trenirovkaApi.logout()\r\n            .then(response => {\r\n                if (response.resultCode === 0)\r\n                    dispatch(getAuthData(\r\n                        null, null, null, false\r\n                    ))\r\n            })\r\n    }\r\n}\r\n\r\nexport default HeaderTrReducer","\r\nlet initialState={\r\n    users:[\r\n        {name: \"Nastya\", status: 'kzkz', photo:\"https://games.mail.ru/hotbox/content_files/gallery/2020/12/11/d49a024e7ade40858a10df3b8976625d.png\"},\r\n        {name: \"Vika\", status: 'kzkz', photo:\"https://games.mail.ru/hotbox/content_files/gallery/2020/12/11/d49a024e7ade40858a10df3b8976625d.png\"}\r\n    ]\r\n}\r\n\r\n\r\nconst UserPReducer = (state=initialState, action)=>{\r\n    \r\n            return state\r\n    \r\n}\r\n\r\n\r\nexport default UserPReducer","import {applyMiddleware, combineReducers, createStore, compose} from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport dialogReducer from \"./dialogReducer\";\r\nimport profileReducer from './profileReducer';\r\nimport sidebarReducer from \"./sidebarReducer\";\r\nimport usersReducer from \"./usersReducer\";\r\nimport thunkMiddleware from \"redux-thunk\"\r\nimport appReducer from './appReducer';\r\nimport newsReducer from './newsReducer';\r\n\r\n\r\nimport messageReducer from \"../Trenirovka.Store/message-reducer\";\r\nimport postReducer from \"../Trenirovka.Store/post-reducer\";\r\nimport commentReducer from \"../Trenirovka.Store/comment-reducer\";\r\nimport usertsTrReducer from \"../Trenirovka.Store/usersTrReducer\";\r\nimport profileTrReducer from \"../Trenirovka.Store/profile-reducer\";\r\nimport HeaderTrReducer from \"../Trenirovka.Store/header-reducer\";\r\nimport UserPReducer from '../Trenirovka.Store/UserPageReducer';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    messagesPage: dialogReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    app: appReducer,\r\n    newsPage: newsReducer,\r\n    messagePage: messageReducer,\r\n    postPage: postReducer,\r\n    commentPage: commentReducer,\r\n    usersTr: usertsTrReducer,\r\n    profileTr: profileTrReducer,\r\n    authTr: HeaderTrReducer,\r\n    userP: UserPReducer\r\n\r\n});\r\n\r\n//Extentions from Redux DevTools for Chrome\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)\r\n  ));\r\n  window.__store__= store;\r\n\r\n\r\n//Without extensions\r\n//let store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n//window.store= store;\r\n\r\nexport default store;","import React, {useState} from 'react';\r\nimport s from './Paginator.module.css'\r\nimport cn from \"classnames\"\r\n\r\nconst Paginator=({totalUsersCount, pageSize, currentPage, onPageChanged, portionSize=10})=>{\r\n    let pageNumber = Math.ceil(totalUsersCount /pageSize)\r\n\r\n    let page = [];\r\n\r\n    for (let i = 1; i <= pageNumber; i++) {\r\n        page.push(i)\r\n    }\r\n\r\n    let portionCount=Math.ceil(pageNumber/portionSize);\r\n    let [numberPortion, setnumberPortion] = useState(1)\r\n    let leftPortionPageNumber=(numberPortion-1)*portionSize+1;\r\n    let rightPortionPageNumber=numberPortion*portionSize;\r\n\r\n\r\n    return(\r\n <div className={s.paginator}>\r\n     {numberPortion>1 &&<button onClick={()=>{setnumberPortion(numberPortion-1)}}>Prev</button>}\r\n            {page\r\n            .filter(p=> p >= leftPortionPageNumber && p <=rightPortionPageNumber)\r\n            .map(p => {\r\n                return <span className={cn({\r\n                    [s.activePage]: currentPage === p\r\n                }, s.pageNumber)}\r\n                    key={p}\r\n                    onClick={(e) => { onPageChanged(p) }}\r\n                >{p} </span>\r\n            })}\r\n    {numberPortion<portionCount && <button onClick={()=>{setnumberPortion(numberPortion+1)}}>Next</button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Paginator ","export default __webpack_public_path__ + \"static/media/user.e7c5e3b2.img\";","import React from 'react';\r\nimport s from './Users.module.css'\r\nimport userPhto from '../../assets/images/user.img'\r\nimport { NavLink } from 'react-router-dom';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\n\r\nlet UseR = ({user, followingInProgress, follow, unfollow}) => {\r\nlet u=user;\r\n\r\n    return (\r\n        <div >\r\n            <span>\r\n                <div>\r\n                    <NavLink to={'/profile/' + u.id}>\r\n                        <img src={u.photos.small != null ? u.photos.small : userPhto} className={s.userPhoto}></img>\r\n                    </NavLink>\r\n\r\n                </div>\r\n                <div>\r\n                    {u.followed\r\n                        ? <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            unfollow(u.id)\r\n\r\n                        }\r\n\r\n                        }>Unfollow</button>\r\n\r\n                        : <button disabled={followingInProgress.some(id => id === u.id)} onClick={() => {\r\n                            follow(u.id)\r\n\r\n                        }\r\n\r\n\r\n                        }>Follow</button>}\r\n                </div>\r\n            </span>\r\n            <span>\r\n                <span>\r\n                    <div>{u.name}</div>\r\n                    <div>{u.status}</div>\r\n                </span>\r\n                <span>\r\n                    <div>{\"u.location.country\"}</div>\r\n                    <div>{\"u.location.city\"}</div>\r\n                </span>\r\n            </span>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default UseR;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport Paginator from '../common/Paginator/Paginator';\r\nimport UseR from './UseR';\r\n\r\n \r\nlet Users = (props) => {\r\n\r\n\r\n    return <div>\r\n        <Paginator currentPage={props.currentPage} \r\n        onPageChanged={props.onPageChanged} \r\n        totalUsersCount={props.totalUsersCount} \r\n        pageSize={props.pageSize}/>\r\n\r\n        {props.users.map(u => <div key={u.id}>\r\n                <UseR user={u} follow={props.follow} unfollow={props.unfollow}\r\n                followingInProgress={props.followingInProgress}/>\r\n            </div>)}\r\n    </div>\r\n\r\n}\r\n\r\n\r\n\r\nexport default Users;\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/preloader.2187296e.gif\";","import React from 'react';\r\nimport preloader from './../../../assets/images/preloader.gif'\r\n\r\n\r\nlet Preloader = (props)=>{\r\n    return (\r\n        <img src={preloader} style={{width: 50, height: 50}}/>\r\n    )\r\n}\r\n\r\nexport default Preloader\r\n\r\n","\r\n\r\nexport const selectorUsers=(state)=>{\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const selectorPageSize=(state)=>{\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const selectorTotalUsersCount=(state)=>{\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const selectorCurrentPage=(state)=>{\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const selectorIsfetcing=(state)=>{\r\n    return state.usersPage.isfetcing\r\n}\r\n\r\nexport const selectorFollowingInProgress=(state)=>{\r\n    return state.usersPage.followingInProgress\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { follow, getUsers, setCurrentPage, unfollow } from '../../redux/usersReducer';\r\nimport Users from './Users';\r\nimport Preloader from '../common/preloader/Preloader';\r\nimport { tooggleFollowingProgress } from './../../redux/usersReducer';\r\nimport { compose } from 'redux';\r\nimport { selectorPageSize, selectorUsers, selectorTotalUsersCount, selectorCurrentPage, selectorIsfetcing, selectorFollowingInProgress } from './../../redux/usersSelector';\r\n\r\n\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsers(this.props.currentPage, this.props.pageSize)\r\n    }\r\n\r\n    onPageChanged = (currentPage) => {\r\n        this.props.getUsers(currentPage, this.props.pageSize)\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            {this.props.isfetcing ? <Preloader /> : null}\r\n            <Users\r\n                totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                onPageChanged={this.onPageChanged}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                users={this.props.users}\r\n                followingInProgress={this.props.followingInProgress}\r\n\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: selectorUsers(state),\r\n        pageSize: selectorPageSize(state),\r\n        totalUsersCount: selectorTotalUsersCount(state),\r\n        currentPage: selectorCurrentPage(state),\r\n        isfetcing: selectorIsfetcing(state),\r\n        followingInProgress: selectorFollowingInProgress(state)\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default compose(connect(mapStateToProps,\r\n    {\r\n        follow, unfollow, setCurrentPage, tooggleFollowingProgress, getUsers\r\n    }))(UsersContainer)","import React, { useEffect, useState } from 'react';\r\n\r\nconst StatusHook = (props) => {\r\n\r\n    let [editMode, setEditMode]=useState(false)\r\n    let [status, setStatus]=useState(props.state)\r\n\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    },\r\n    [props.status]\r\n    );\r\n\r\n    let activateEditMode=()=>{\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode=()=>{\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n\r\n    let onStatusChange=(e)=>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span  onClick={activateEditMode}>{props.status ||'----'}</span>\r\n                </div>}\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StatusHook","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './Profileinfo.module.css'\r\nimport StatusHook from './StatusHook';\r\n\r\nconst ProfileInfo = (props) => {\r\n    if(!props.profile){\r\n        return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            \r\n            \r\n            <div className={s.description}>\r\n                <div>{props.profile.fullName}</div>\r\n                <img src={props.profile.photos.large}/>\r\n                <div>\r\n                    <StatusHook status={props.status} updateStatus={props.updateStatus}/>\r\n                </div>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css'\r\n\r\nconst Post = (props) => {\r\n    return (\r\n       \r\n            <div className={s.item}>\r\n              <img src=\"https://img3.goodfon.ru/wallpaper/nbig/4/99/neytiri-avatar.jpg\"></img>  \r\n                {props.message}\r\n                <div>\r\n                    <span>{props.likesNumber}</span>\r\n                </div>\r\n                \r\n                </div>\r\n           \r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Post;\r\n\r\n","import React from 'react';\r\nimport Post from './Post/Post';\r\nimport s from './MyPosts.module.css'\r\nimport { Formik, Form, Field } from 'formik';\r\n\r\nconst validateForm = values => {\r\n    const errors = {};\r\n    if (values.newPostText.length > 50) {\r\n        errors.newPostText = 'Please write maximum 50 simbols';\r\n    } else if (\r\n        values.newPostText.length < 1\r\n    ) {\r\n        errors.newPostText = 'You can not send an empty message'\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    const addNewPost = (values, { setSubmitting }) => {\r\n\r\n        props.addPost(values.newPostText)\r\n        setSubmitting(false);\r\n\r\n    }\r\n\r\n    let postElement = props.posts.map(el => <Post message={el.message} key={el.id} likesNumber={el.likesNumber} />)\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <div>\r\n               \r\n                <Formik\r\n                    initialValues={{ newPostText: 'add new post'}}\r\n                    validate={validateForm}\r\n                    onSubmit={addNewPost}\r\n                >\r\n                    {({ values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n\r\n                        isSubmitting }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <div>\r\n                                <Field onChange={handleChange} onBlur={handleBlur} type=\"textarea\" name=\"newPostText\" value={values.newPostText} />\r\n                                {errors.newPostText && touched.newPostText && errors.newPostText}\r\n                            </div>\r\n                            <button type=\"submit\" disabled={isSubmitting}>\r\n                            Add post\r\n           </button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n\r\n            </div>\r\n            <div>\r\n                <div className={s.posts}>\r\n                    {postElement}\r\n                </div>\r\n\r\n\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostActionCreator } from '../../../redux/profileReducer';\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\nlet mapSetToProps =(state)=>{\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return {\r\n        addPost: (newPostText)=> {\r\n            dispatch(addPostActionCreator(newPostText))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapSetToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer","import React from 'react';\r\nimport ProfileInfo from './Profileinfo/Profileinfo';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\n\r\nconst Profile = (props) => {\r\n   \r\n  return (\r\n\r\n    <div>\r\n      <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Profile from './Profile';\r\nimport { getProfile, updateStatus, getStatus } from './../../redux/profileReducer';\r\nimport { withRouter } from 'react-router';\r\n\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from './../../hoc/withAuthRedirect';\r\n\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        \r\n        if (!userId) { \r\n            userId = this.props.authUserId \r\n        if(!userId){\r\n            this.props.history.push(\"/login\")\r\n        }\r\n        }\r\n\r\n\r\n        this.props.getProfile(userId);\r\n        this.props.getStatus(userId);\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status} updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        profile: state.profilePage.profile,\r\n        status: state.profilePage.status,\r\n        authUserId: state.auth.id,\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getProfile, updateStatus, getStatus}),\r\n    withRouter\r\n)(ProfileContainer)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"https://im0-tub-by.yandex.net/i?id=d02d6f6d33ba5d8e696cfc80e3f20e14&n=13\"></img>\r\n            <div className={s.loginBlock}>\r\n                { props.isAuth ? <div>{props.login} - <button onClick={props.logout}>Log out</button> </div>:\r\n                <NavLink to={'/login'}> \r\n                    Login\r\n                    </NavLink>}\r\n                </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Header from './Header';\r\nimport {logout} from './../../redux/authReducer';\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return (\r\n            <Header {...this.props} />\r\n        )\r\n    } \r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    login: state.auth.login\r\n\r\n})\r\n\r\nexport default connect(mapStateToProps, { logout })(HeaderContainer)\r\n","import React from 'react';\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { connect } from 'react-redux';\r\nimport { login, stopSubmit } from '../../redux/authReducer';\r\nimport { Redirect } from 'react-router';\r\nimport s from './LoginPage.module.css';\r\n\r\nconst validateForm = values => {\r\n    const errors = {};\r\n    if (!values.email) {\r\n        errors.email = 'Required';\r\n    } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n    ) {\r\n        errors.email = 'Invalid email address';\r\n    }\r\n\r\n    if (!values.password) {\r\n        errors.password = 'Required';\r\n    } else if (values.password.length < 6) {\r\n        errors.password = 'Must be more then 6 characters'\r\n    }\r\n\r\n    return errors;\r\n}\r\n\r\n\r\nconst Login = (props) => {\r\n    const submit = (values, onSubmitProps) => {\r\n\r\n        props.login(values.email, values.password, values.checkbox)\r\n        onSubmitProps.setSubmitting(false);\r\n\r\n    }\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"} />\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>Login</h1>\r\n\r\n            <div>\r\n                <Formik\r\n                    initialValues={{ email: '', password: '', checkbox: 'true' }}\r\n                    validate={validateForm}\r\n                    onSubmit={submit}\r\n                >\r\n                    {({ values,\r\n                        errors,\r\n                        touched,\r\n                        handleChange,\r\n                        handleBlur,\r\n                        handleSubmit,\r\n                        isValid,\r\n\r\n                        isSubmitting }) => (\r\n                        <Form onSubmit={handleSubmit}>\r\n                            <div>\r\n                                <Field onChange={handleChange} onBlur={handleBlur} type=\"email\" name=\"email\" placeholder=\"Login\" value={values.email} />\r\n                                {errors.email && touched.email && errors.email}\r\n                            </div>\r\n                            <div>\r\n                                <Field onChange={handleChange} onBlur={handleBlur} type=\"password\" name=\"password\" placeholder=\"Password\" value={values.password} />\r\n                                {errors.password && touched.password && errors.password}\r\n                            </div>\r\n                            <div>\r\n                                <Field onChange={handleChange} type=\"checkbox\" name=\"checkbox\" /> remember me\r\n\r\n                        </div>\r\n                       {/*<div className={s.someerror}>{props.error}</div>*/} \r\n\r\n                            <button type=\"submit\" disabled={!isValid || isSubmitting}>\r\n                                Submit\r\n           </button>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    error: state.auth.error\r\n    }\r\n    \r\n}\r\n\r\nexport default connect(mapStateToProps, {login})(Login)\r\n","import React from 'react';\r\nimport s from './../Trenirovka.module.css'\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst TRItem = (props) => {\r\n    let path = '/trenirovka/' + props.userId\r\n    return (\r\n        \r\n            <div className={s.item}>\r\n                <NavLink to={path} activeClassName={s.active}>{props.name}</NavLink>\r\n            </div>\r\n           \r\n     \r\n    )\r\n}\r\n\r\nexport default TRItem\r\n\r\n","import React from 'react';\r\n\r\n\r\n\r\nconst TRDialog = (props) => {\r\n\r\n    return (\r\n<div>\r\n        <div>\r\n            {props.message}\r\n        </div>\r\n        \r\n </div>       \r\n    )\r\n}\r\n\r\nexport default TRDialog\r\n\r\n","import React from 'react';\r\nimport s from './FormControls.module.css'\r\n\r\nexport const Textarea = (props) => {\r\n    debugger\r\n    let error=props.form.errors.newMessage && props.form.touched.newMessage;\r\n    return (<div className={ error && s.error}>\r\n        <div>\r\n            <textarea {...props.field}/>\r\n        </div>\r\n        {error && <span>{props.form.errors.newMessage}</span>}\r\n        \r\n    </div>\r\n    )\r\n        }\r\n","import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage} from 'formik';\r\nimport { Textarea } from './../../common/FormControls/FormControls';\r\nimport { required, validateForm, maxLength } from './../../../utils/validators/validators';\r\n\r\nconst maxLength10=maxLength(10)\r\n\r\nconst FormMessage = (props) => {\r\n    return (\r\n        <Formik\r\n            initialValues={{ newMessage: 'pp' }}\r\n            validate={validateForm}\r\n            onSubmit={props.submitMessage}\r\n        >\r\n            {({ values,\r\n                errors,\r\n                touched,\r\n                handleChange,\r\n                handleBlur,\r\n                handleSubmit,\r\n                isValid,\r\n                isSubmitting }) => (\r\n                <Form onSubmit={handleSubmit}>\r\n                    <Field name=\"newMessage\" value={values.newMessage} component={Textarea} onChange={handleChange} onBlur={handleBlur} />\r\n                    <div>\r\n                        <button type=\"submit\" disabled={!isValid || isSubmitting}>\r\n                            Submit\r\n           </button>\r\n                    </div>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n\r\n    )\r\n}\r\n\r\nexport default FormMessage","import React from 'react';\r\nimport s from './../Trenirovka.module.css'\r\nimport TRItem from './TRItem';\r\nimport TRDialog from './TRDialog';\r\n\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport FormMessage from './MessageForm';\r\n\r\n\r\n\r\n\r\n\r\nconst DialogMain = (props) => {\r\n\r\n\r\n    const submitMessage = (values, { setSubmitting }) => {\r\n\r\n        props.buttonMessageContainer(values.newMessage);\r\n        setSubmitting(false);\r\n\r\n    }\r\n\r\n    let dialogsElement = props.dialog.map((el) => (<TRItem name={el.name} userId={el.userId} />))\r\n    let messagesElement = props.message.map((el) => (<TRDialog message={el.message} id={el.id} />))\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={s.messages}>My Messages:</div>\r\n            </div>\r\n\r\n            <div className={s.dialog}>\r\n                <div>{dialogsElement}</div>\r\n                <div>{messagesElement}</div>\r\n\r\n            </div>\r\n            <div>\r\n\r\n                <FormMessage submitMessage={submitMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogMain\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './../Trenirovka.module.css'\r\nimport { addMessageActionCreator, changeMessageActionCreator } from '../../../Trenirovka.Store/message-reducer';\r\nimport DialogMain from './DialogMain';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialog: state.messagePage.dialog,\r\n        message: state.messagePage.messages,\r\n        newMessageText: state.messagePage.newMessageText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n    \r\n        buttonMessageContainer: (newMessage) => {\r\n            dispatch(addMessageActionCreator(newMessage))\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nconst DialogMainContainer = connect(mapStateToProps, mapDispatchToProps)(DialogMain)\r\n\r\nexport default DialogMainContainer","import React from 'react';\r\nimport s from './../Trenirovka.module.css'\r\n\r\nconst Posts = (props) => {\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.namePost}>{props.name}</div>\r\n\r\n            <div className={s.avatar}>\r\n                <img src={props.avatar}></img>\r\n            </div>\r\n            \r\n            <div>\r\n                {props.post} <span className={s.likes}>{props.likesCount} likes</span>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Posts","import React from 'react';\r\nimport Posts from './Posts';\r\nimport s from './../Trenirovka.module.css'\r\n\r\n\r\nconst PostMain = (props) => {\r\n\r\n   \r\n    let buttonPost = (e) => {\r\n        e.preventDefault()\r\n        props.buttonPostContainer()\r\n    }\r\n\r\n    let postChange =(e)=>{\r\n        let post = e.target.value\r\n        props.postChangeContainer(post)\r\n    }\r\n\r\n    let postElement = props.post.map((el) => (<Posts name={el.name} avatar={el.avatar} post={el.post} likesCount={el.likesCount} />))\r\n\r\n   \r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div className={s.messages}>My Posts:</div>\r\n            </div>\r\n\r\n            <div className={s.posts}>\r\n                <div>  {postElement} </div>\r\n\r\n            </div>\r\n            <div>\r\n\r\n                <form>\r\n                    <div>\r\n                        <input value={props.newPostText} onChange={postChange} type=\"textarea\"></input>\r\n                        <div>\r\n                            <button onClick={buttonPost}>Post Submit</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PostMain;","import React from 'react';\r\nimport s from './../Trenirovka.module.css'\r\nimport { addPostActionCreator, changePostActionCreator } from '../../../Trenirovka.Store/post-reducer';\r\nimport PostMain from './PostMain';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        post: state.postPage.posts,\r\n        newPostText: state.postPage.newPostText\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        postChangeContainer:(post)=>{\r\n            dispatch(changePostActionCreator(post))\r\n        },\r\n        buttonPostContainer:()=>{\r\n            dispatch(addPostActionCreator())\r\n        }\r\n\r\n    }\r\n}\r\n\r\nconst PostMainContainer=connect(mapStateToProps, mapDispatchToProps)(PostMain)\r\n\r\nexport default PostMainContainer;","import React from 'react';\r\nimport s from './../Trenirovka.module.css'\r\n\r\nconst Comment=(props)=>{\r\n    return(\r\n<div className={s.commentForm}>\r\n    \r\n    <div className={s.borderName}>{props.id}\r\n    <div className={s.comment}>{props.comment}</div>\r\n     \r\n    </div>\r\n\r\n\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Comment","import React from 'react';\r\nimport s from './../Trenirovka.module.css'\r\nimport Comment from './Comment';\r\n\r\n\r\nconst CommentMain = (props) => {\r\n    let buttonComment = (e) => {\r\n        e.preventDefault()\r\n        props.buttonCommentContainer()\r\n    }\r\n \r\n    let commentChange = (e) => {\r\n        let comment =e.target.value\r\n        props.commentChangeContainer(comment)\r\n    }\r\n\r\n\r\n\r\n    let commentElement = props.comment.map((el) => (<Comment id={el.id} comment={el.comment} />))\r\n\r\n    return (\r\n        <div>\r\n\r\n            <div className={s.messages}>My Photos:</div>\r\n            <div className={s.imgComment}><img src=\"https://i.playground.ru/i/pix/1309494/image.jpg\"></img></div>\r\n            <div>\r\n                {commentElement}\r\n            </div>\r\n\r\n            <form>\r\n                <div>\r\n                    <input onChange={commentChange} value={props.newCommentText} type=\"textarea\"></input>\r\n                    <div>\r\n                        <button onClick={buttonComment}>Comment Submit</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CommentMain;","import React from 'react';\r\nimport { addCommentActionCreator, changeCommentActionCreator } from '../../../Trenirovka.Store/comment-reducer';\r\nimport s from './../Trenirovka.module.css'\r\nimport CommentMain from './CommentMain';\r\nimport { connect } from 'react-redux';\r\n\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        comment: state.commentPage.comment,\r\n        newCommentText: state.commentPage.newCommentText\r\n    } \r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        buttonCommentContainer: () => {\r\n            dispatch(addCommentActionCreator())\r\n        },\r\n        commentChangeContainer: (comment) => {\r\n            dispatch(changeCommentActionCreator(comment))\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst CommentMainContainer = connect(mapStateToProps, mapDispatchToProps)(CommentMain)\r\n\r\nexport default CommentMainContainer;","import React from 'react';\r\nimport s from './Trenirovka.module.css'\r\nimport DialogMainContainer from './Dialog/DialogMainContainer';\r\nimport PostMainContainer from './Post/PostMainContainer';\r\nimport CommentMainContainer from './Comment/CommentMainContainer';\r\n\r\n\r\n\r\n\r\nconst Trenirovka = (props) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n            <DialogMainContainer />\r\n            <PostMainContainer />\r\n            <CommentMainContainer />\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Trenirovka;","import React from 'react';\r\nimport s from './News.module.css'\r\n\r\nconst NewsData = (props) => {\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className={s.news}>\r\n\r\n            <div className={s.data}>\r\n                <div>{props.name}</div>\r\n                <div>{props.data}</div>\r\n            </div>\r\n\r\n            <div className={s.news}>\r\n                <div>{props.news}</div>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n\r\n            \r\n}\r\n\r\nexport default NewsData;","import React from 'react';\r\nimport s from './News.module.css'\r\nimport NewsData from './NewsData';\r\n\r\n\r\nconst News = (props) => {\r\n\r\n    let addNews = (e) => {\r\n        e.preventDefault()\r\n        props.addNewsContainer()\r\n    }\r\n\r\n    let changeNews = (e) => {\r\n        let newsText = e.target.value\r\n        props.changeNewsContainer(newsText)\r\n    }\r\n\r\n    let newsDataElement = props.news.map((el) => (<NewsData name={el.name} data={el.data} news={el.news} />))\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>{newsDataElement}</div>\r\n            </div>\r\n\r\n            <div>\r\n                <form>\r\n                    <div>\r\n                        <input onChange={changeNews} value={props.newsTextInitial} type=\"textarea\"></input>\r\n                        <div>\r\n                            <button onClick={addNews}>Send News</button>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News;","import React from 'react';\r\nimport News from './News';\r\nimport { connect } from 'react-redux';\r\nimport { addNewsActionCreator, changeNewsActionCreator } from '../../../redux/newsReducer';\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        news: state.newsPage.newsPage,\r\n        newsTextInitial: state.newsPage.newsTextInitial\r\n\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=>{\r\n    return{\r\n        changeNewsContainer: (newsText)=>{\r\n            dispatch(changeNewsActionCreator(newsText))\r\n        },\r\n        addNewsContainer: ()=>{\r\n            dispatch(addNewsActionCreator())\r\n        }\r\n        \r\n    }\r\n}\r\n\r\nconst NewsContainer=connect(mapStateToProps, mapDispatchToProps)(News)\r\nexport default NewsContainer","import React from 'react';\r\nimport NewsContainer from './NewsContainer';\r\n\r\n\r\n\r\n\r\n\r\nconst NewsPage = (props) => {\r\n\r\n    return (\r\n        <div>\r\n\r\n           <NewsContainer/>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsPage;","import React from 'react';\r\nimport s from './UsersT.module.css'\r\nimport UserImg from './../../../assets/images/user.img'\r\nimport { NavLink } from 'react-router-dom';\r\nimport { trenirovkaApi } from '../../../api/api';\r\n\r\nconst UsersContent = (props) => {\r\n    let pageNumber = Math.ceil(props.totalCountUser / props.pageSize)\r\n    let page = [];\r\n    for (let i = 1; i <= pageNumber; i++) {\r\n        page.push(i)\r\n    }\r\n\r\n    return (\r\n\r\n        <div>\r\n            <div>\r\n                <div>{page.map((p) =>\r\n                    <span className={props.selectedPage === p && s.activePage} onClick={() => { props.setSelectedPage(p) }}>\r\n                        {p}\r\n\r\n                    </span>)}</div>\r\n\r\n\r\n                <div>\r\n                    {props.users.map((u) => (\r\n                        <div key={u.id} className={s.users}>\r\n                            <div className={s.avatar}>\r\n                                <NavLink to={'/profiletrenirovka/'+u.id}>\r\n                                    <img src={u.photos.small !== null ? u.photos.small : UserImg}></img>\r\n                                </NavLink>\r\n                            </div>\r\n\r\n                            <div>\r\n                                {u.followed ?\r\n                                    <button disabled={props.followingProgress.some(id=>id===u.id)} onClick={() => { \r\n\r\n                                        props.unfollowThunk(u.id)\r\n\r\n                                    }}>Unfollow</button> :\r\n                                    <button disabled={props.followingProgress.some(id=>id===u.id)} onClick={() => {\r\n\r\n                                        props.followThunk(u.id)\r\n                                       \r\n                                        \r\n                                        }}>Follow</button>}\r\n                            </div>\r\n\r\n                            <div>{u.name}</div>\r\n                            <div>{u.status}</div>\r\n\r\n                        </div>))}\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default UsersContent","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {follow, unfollow, toogleIsFetching, followingInProgress, getUsersThunk, setSelectedPageThunk, followThunk, unfollowThunk } from './../../../Trenirovka.Store/usersTrReducer';\r\nimport UsersT from './UsersT';\r\nimport * as axios from 'axios';\r\nimport Preloader from './../../common/preloader/Preloader';\r\n\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\n\r\n\r\n\r\n\r\nclass UsersTContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n\r\n        this.props.getUsersThunk(this.props.pageSize, this.props.selectedPage)\r\n        \r\n    }\r\n\r\n    setSelectedPage = (p) => {\r\n        this.props.setSelectedPageThunk(this.props.pageSize, p)\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <UsersT\r\n                totalCountUser={this.props.totalCountUser}\r\n                pageSize={this.props.pageSize}\r\n                selectedPage={this.props.selectedPage}\r\n                setSelectedPage={this.setSelectedPage}\r\n                users={this.props.users}\r\n                unfollow={this.props.unfollow}\r\n                follow={this.props.follow}\r\n                followingProgress={this.props.followingProgress}\r\n                followingInProgress={this.props.followingInProgress}\r\n                followThunk={this.props.followThunk}\r\n                unfollowThunk={this.props.unfollowThunk}\r\n                \r\n\r\n            />\r\n        </>)\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.usersTr.users,\r\n        totalCountUser: state.usersTr.totalCountUser,\r\n        pageSize: state.usersTr.pageSize,\r\n        selectedPage: state.usersTr.selectedPage,\r\n        isFetching: state.usersTr.isFetching,\r\n        followingProgress: state.usersTr.followingProgress,\r\n\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {  getUsersThunk, setSelectedPageThunk, followThunk, unfollowThunk}),\r\n    withAuthRedirect\r\n)(UsersTContainer)\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n\r\nconst StatusTHook=(props)=> {\r\n    let [editMode, setEditMode]=useState(false)\r\n    let [status, setStatus]=useState(props.status)\r\n\r\n    let activateEditMode=()=>{\r\n        setEditMode(true)\r\n    }\r\n\r\n    let deactivateEditMode=()=>{\r\n        setEditMode(false)\r\n        props.updateStatusThunk(status)\r\n    }\r\n\r\n    let changeStatus=(e)=>{\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n\r\n\r\n\r\n   \r\n        return (\r\n            <div>\r\n                {!editMode &&\r\n                    <div>\r\n                        <span onClick={activateEditMode}>{props.status || 'no status'}</span>\r\n                    </div>\r\n                }\r\n\r\n                {editMode &&\r\n                    <div>\r\n                        <input onChange={changeStatus} onBlur={deactivateEditMode} type='text' value={status}></input>\r\n                    </div>\r\n                }\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\nexport default StatusTHook","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\n\r\nimport StatusTHook from './StatusHook';\r\n\r\nconst ProfileTr=(props)=>{\r\n\r\n    if(!props.profile){\r\n        return( <Preloader/>) }\r\n    return (\r\n        <div>\r\n            <StatusTHook status={props.status} \r\n            updateStatusThunk={props.updateStatusThunk}/>\r\n           <div>{props.profile.fullName}</div>\r\n           <div><img src={props.profile.photos.large}></img></div>\r\n           <div>{props.profile.aboutMe}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileTr","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport ProfileTr from './ProfileTr';\r\nimport { setProfilePage, getProfilePageThunk, getStatusThunk, updateStatusThunk} from './../../../Trenirovka.Store/profile-reducer';\r\nimport * as axios from 'axios';\r\nimport { withRouter } from 'react-router';\r\nimport { trenirovkaApi } from '../../../api/api';\r\nimport { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\r\n\r\n\r\n\r\n\r\nclass ProfileTrContainer extends React.Component  {\r\n    componentDidMount(){\r\n        let userId=this.props.match.params.userId\r\n        if(!userId){userId=16364}\r\n        \r\n        this.props.getProfilePageThunk(userId)\r\n        this.props.getStatusThunk(userId)\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <ProfileTr {...this.props} \r\n            profile={this.props.profile} \r\n            status={this.props.status} \r\n            updateStatusThunk={this.props.updateStatusThunk}/>\r\n        )\r\n    }\r\n\r\n\r\n}\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        profile: state.profileTr.profile,\r\n        status: state.profileTr.status\r\n}}\r\n    \r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {setProfilePage, getProfilePageThunk, getStatusThunk, updateStatusThunk}), \r\n    withAuthRedirect,\r\n    withRouter\r\n)(ProfileTrContainer)","import React from 'react';\r\n\r\nconst UserPage=(props)=>{\r\n  \r\n    return(\r\n      <div>{props.users.map(u=><div>\r\n            <div>{u.name}</div>\r\n            <div>{u.status}</div>\r\n            <div><img src={u.photo}></img></div>\r\n        </div>\r\n       )\r\n       }</div>\r\n    )\r\n}\r\n\r\nexport default UserPage","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport UserPage from './UserPage';\r\n\r\n\r\nclass UserContainerPage extends React.Component{\r\n    render(){\r\n        return <UserPage users={this.props.users}/>\r\n    }\r\n}\r\n\r\nlet mapStateToProps=(state)=>{\r\n    return{\r\n        users: state.userP.users\r\n    }\r\n    \r\n}\r\n\r\nlet mapDispatchToProps=(dispatch)=>{\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(UserContainerPage)","import React, { Component } from 'react';\nimport { withSuspense } from './hoc/withSuspense';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Music from './components/Music/Music';\nimport Setting from './components/Setting/Setting';\nimport { HashRouter, Route } from \"react-router-dom\";\nimport store from './redux/redux-store';\nimport { Provider } from \"react-redux\"\nimport UsersContainer from './components/Users/UsersContainer';\nimport ProfileContainer from './components/Profile/ProfileContainer';\nimport HeaderContainer from './components/Header/HeaderContainer';\nimport LoginPage from './components/Login/LoginPage';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router';\nimport { initializeApp } from './redux/appReducer';\nimport Preloader from './components/common/preloader/Preloader';\nimport Trenirovka from './components/Trenirovka/Trenirovka';\nimport NewsPage from './components/Trenirovka/News/NewsPage';\nimport UsersTContainer from './components/Trenirovka/UsersTrenirivka/UsersTContainer';\nimport ProfileTrContainer from './components/Trenirovka/Profile/ProfileTrContainer';\nimport UserPageContainer from './components/Trenirovka/TrenirovkaPage/UserPageContainer';\n//import DialogContainer from './components/Dialog/DialogContainer';\nconst DialogContainer = React.lazy(() => import('./components/Dialog/DialogContainer'));\n\n\n\nclass App extends Component {\n\n\n  componentDidMount() {\n    this.props.initializeApp()\n  }\n\n  render() {\n    if (!this.props.isInitialised) {\n      return <Preloader />\n    }\n\n    return (\n\n      <div className='app-wrapper'>\n        <HeaderContainer />\n\n        <Navbar />\n        <div className='app-wrapper-content'>\n\n          <Route path='/profile/:userId?' render={() => <ProfileContainer />} />\n          {/*<Route path='/dialog' render={() => <DialogContainer />} />*/}\n          <Route path='/dialog' render={withSuspense(DialogContainer)}/>\n          <Route path='/news' render={() => <NewsPage />} />\n          <Route path='/music' render={() => <Music />} />\n          <Route path='/setting' render={() => <Setting />} />\n          <Route path='/users' render={() => <UsersContainer />} />\n\n          <Route path='/login' render={() => <LoginPage />} />\n\n          <Route path='/trenirovka' render={() => <Trenirovka />} />\n          <Route path='/userstrenitovka' render={() => <UsersTContainer />} />\n          <Route path='/profiletrenirovka/:userId?' render={() => <ProfileTrContainer />} />\n          <Route path='/userpage' render={() => <UserPageContainer />} />\n\n\n\n        </div>\n      </div>\n\n    )\n  }\n\n}\n\nconst mapStateToProps = (state) => ({\n  isInitialised: state.app.isInitialised\n})\n\n\nlet AppContainer = compose(\n  withRouter,\n  connect(mapStateToProps, { initializeApp }))\n  (App)\n\nlet MainApp = (props) => {\n  return <HashRouter basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n      <AppContainer />\n    </Provider>\n  </HashRouter>\n}\n\nexport default MainApp\n","import React from 'react';\r\nimport { Suspense } from 'react';\r\n\r\nexport const withSuspense = (Component) => {\r\n    return (props)=>{\r\n        return <Suspense fallback={<div>Загрузка...</div>}>\r\n        <Component {...props}/>\r\n      </Suspense>\r\n    }\r\n    }\r\n\r\n   ","import reportWebVitals from './reportWebVitals';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './App';\n\n\n\n  ReactDOM.render(\n    \n      <MainApp /> , document.getElementById('root')\n\n  )\n  \n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import React from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToPropsForRedirect=(state)=>({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to={'/login'} />\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent\r\n\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"news\":\"News_news__35hFZ\",\"data\":\"News_data__1FiEB\",\"input\":\"News_input__OtRAt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__YfgDA\",\"pageNumber\":\"Paginator_pageNumber__1VC4O\",\"activePage\":\"Paginator_activePage__2sABI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"UsersT_avatar__1lL4P\",\"users\":\"UsersT_users__oNU82\",\"activePage\":\"UsersT_activePage__3lGhW\"};","import React from 'react';\r\n\r\nexport const validateForm = values => {\r\n    const errors = {};\r\n    if (!values.newMessage) {\r\n      errors.newMessage = 'Required';\r\n    } else if (\r\n        values.newMessage.length>10\r\n    ) {\r\n      errors.newMessage = 'Write more then 10 sumbols';\r\n    }\r\n    return errors;\r\n  }\r\n\r\n  export const required =  values=>{\r\n    const errors = {};\r\n    if (!values) {\r\n      errors = 'Required';\r\n    } \r\n    return errors;\r\n  }\r\n\r\n  export const maxLength=(maxLength)=>(values)=>{\r\n    const errors = {};\r\n    if (\r\n        values.length < maxLength\r\n    ) {\r\n      errors = `Write more then ${maxLength} sumbols`;\r\n    }\r\n    return errors;\r\n  }","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__1FlvS\",\"textarea\":\"MyPosts_textarea__3-BNU\",\"button\":\"MyPosts_button__3PJVS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1YroQ\",\"loginBlock\":\"Header_loginBlock__2aYJs\"};","const SEND_MESSAGE_BODY = 'SEND-MESSAGE-BODY'\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { name: 'Nastya', id: '1' },\r\n        { name: 'Maksim', id: '2' },\r\n        { name: 'Sacha', id: '3' },\r\n        { name: 'Alina', id: '4' },\r\n        { name: 'Zenia', id: '5' },\r\n        { name: 'Veronika', id: '6' }\r\n    ],\r\n\r\n    messages: [\r\n        { id: 1, message: 'Hello, how are you?' },\r\n        { id: 2, message: 'Hi, i am fine!' },\r\n        { id: 3, message: 'What is you name?' },\r\n        { id: 4, message: 'My name is Nastya. What is your name?' },\r\n        { id: 5, message: 'My name is Maksim.' }\r\n\r\n    ]\r\n}\r\n\r\nconst dialogReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SEND_MESSAGE_BODY:\r\n            let body = action.newMessage;\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, { id: 6, message: body }]\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\n\r\nexport const sendMessageBodyActionCreator = (newMessage) => ({\r\n    type: SEND_MESSAGE_BODY, newMessage\r\n})\r\n\r\nexport default dialogReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Trenirovka_messages__N8nJr\",\"dialog\":\"Trenirovka_dialog__3Hyj_\",\"item\":\"Trenirovka_item__3xMyP\",\"active\":\"Trenirovka_active__16AwD\",\"avatar\":\"Trenirovka_avatar__1nq9C\",\"likes\":\"Trenirovka_likes__2e2ZV\",\"namePost\":\"Trenirovka_namePost__3Ye46\",\"imgComment\":\"Trenirovka_imgComment__1Qdcp\",\"borderName\":\"Trenirovka_borderName__24NQ6\",\"comment\":\"Trenirovka_comment__3YxG_\",\"commentForm\":\"Trenirovka_commentForm__3uYNl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__1tbdi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"picture\":\"Profileinfo_picture__28uJm\",\"description\":\"Profileinfo_description__3wem2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2L_o6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"error\":\"FormControls_error__IvRpi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__UerlR\",\"item\":\"Navbar_item__3uoy-\",\"active\":\"Navbar_active__1aqQl\"};"],"sourceRoot":""}